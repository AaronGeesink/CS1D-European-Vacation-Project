.TH "C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/debug/moc_predefs.h" 3 "Sun Oct 20 2019" "Version 1.0" "European Vacation Planner" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/debug/moc_predefs.h
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fB__DBL_MIN_EXP__\fP   (\-1021)"
.br
.ti -1c
.RI "#define \fB__FLT32X_MAX_EXP__\fP   1024"
.br
.ti -1c
.RI "#define \fB__cpp_attributes\fP   200809"
.br
.ti -1c
.RI "#define \fB__pentiumpro__\fP   1"
.br
.ti -1c
.RI "#define \fB__UINT_LEAST16_MAX__\fP   0xffff"
.br
.ti -1c
.RI "#define \fB__ATOMIC_ACQUIRE\fP   2"
.br
.ti -1c
.RI "#define \fB__FLT128_MAX_10_EXP__\fP   4932"
.br
.ti -1c
.RI "#define \fB__FLT_MIN__\fP   1\&.17549435082228750796873653722224568e\-38F"
.br
.ti -1c
.RI "#define \fB__GCC_IEC_559_COMPLEX\fP   2"
.br
.ti -1c
.RI "#define \fB__UINT_LEAST8_TYPE__\fP   unsigned char"
.br
.ti -1c
.RI "#define \fB__SIZEOF_FLOAT80__\fP   12"
.br
.ti -1c
.RI "#define \fB_WIN32\fP   1"
.br
.ti -1c
.RI "#define \fB__INTMAX_C\fP(c)   c ## LL"
.br
.ti -1c
.RI "#define \fB__CHAR_BIT__\fP   8"
.br
.ti -1c
.RI "#define \fB__UINT8_MAX__\fP   0xff"
.br
.ti -1c
.RI "#define \fB__WINT_MAX__\fP   0xffff"
.br
.ti -1c
.RI "#define \fB__FLT32_MIN_EXP__\fP   (\-125)"
.br
.ti -1c
.RI "#define \fB__cpp_static_assert\fP   200410"
.br
.ti -1c
.RI "#define \fB__ORDER_LITTLE_ENDIAN__\fP   1234"
.br
.ti -1c
.RI "#define \fB__SIZE_MAX__\fP   0xffffffffU"
.br
.ti -1c
.RI "#define \fB__WCHAR_MAX__\fP   0xffff"
.br
.ti -1c
.RI "#define \fB__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\fP   1"
.br
.ti -1c
.RI "#define \fB__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2\fP   1"
.br
.ti -1c
.RI "#define \fB__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\fP   1"
.br
.ti -1c
.RI "#define \fB__DBL_DENORM_MIN__\fP   double(4\&.94065645841246544176568792868221372e\-324L)"
.br
.ti -1c
.RI "#define \fB__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8\fP   1"
.br
.ti -1c
.RI "#define \fB__GCC_ATOMIC_CHAR_LOCK_FREE\fP   2"
.br
.ti -1c
.RI "#define \fB__GCC_IEC_559\fP   2"
.br
.ti -1c
.RI "#define \fB__FLT32X_DECIMAL_DIG__\fP   17"
.br
.ti -1c
.RI "#define \fB__FLT_EVAL_METHOD__\fP   2"
.br
.ti -1c
.RI "#define \fB__cpp_binary_literals\fP   201304"
.br
.ti -1c
.RI "#define \fB__FLT64_DECIMAL_DIG__\fP   17"
.br
.ti -1c
.RI "#define \fB__GCC_ATOMIC_CHAR32_T_LOCK_FREE\fP   2"
.br
.ti -1c
.RI "#define \fB__cpp_variadic_templates\fP   200704"
.br
.ti -1c
.RI "#define \fB__UINT_FAST64_MAX__\fP   0xffffffffffffffffULL"
.br
.ti -1c
.RI "#define \fB__SIG_ATOMIC_TYPE__\fP   int"
.br
.ti -1c
.RI "#define \fB__DBL_MIN_10_EXP__\fP   (\-307)"
.br
.ti -1c
.RI "#define \fB__FINITE_MATH_ONLY__\fP   0"
.br
.ti -1c
.RI "#define \fB__GNUC_PATCHLEVEL__\fP   0"
.br
.ti -1c
.RI "#define \fB__FLT32_HAS_DENORM__\fP   1"
.br
.ti -1c
.RI "#define \fB__UINT_FAST8_MAX__\fP   0xff"
.br
.ti -1c
.RI "#define \fB__has_include\fP(STR)   __has_include__(STR)"
.br
.ti -1c
.RI "#define \fB_stdcall\fP   __attribute__((__stdcall__))"
.br
.ti -1c
.RI "#define \fB__DEC64_MAX_EXP__\fP   385"
.br
.ti -1c
.RI "#define \fB__INT8_C\fP(c)   c"
.br
.ti -1c
.RI "#define \fB__INT_LEAST8_WIDTH__\fP   8"
.br
.ti -1c
.RI "#define \fB__UINT_LEAST64_MAX__\fP   0xffffffffffffffffULL"
.br
.ti -1c
.RI "#define \fB__SHRT_MAX__\fP   0x7fff"
.br
.ti -1c
.RI "#define \fB__LDBL_MAX__\fP   1\&.18973149535723176502126385303097021e+4932L"
.br
.ti -1c
.RI "#define \fB__FLT64X_MAX_10_EXP__\fP   4932"
.br
.ti -1c
.RI "#define \fB__UINT_LEAST8_MAX__\fP   0xff"
.br
.ti -1c
.RI "#define \fB__GCC_ATOMIC_BOOL_LOCK_FREE\fP   2"
.br
.ti -1c
.RI "#define \fB__FLT128_DENORM_MIN__\fP   6\&.47517511943802511092443895822764655e\-4966F128"
.br
.ti -1c
.RI "#define \fB__UINTMAX_TYPE__\fP   long long unsigned int"
.br
.ti -1c
.RI "#define \fB__DEC32_EPSILON__\fP   1E\-6DF"
.br
.ti -1c
.RI "#define \fB__FLT_EVAL_METHOD_TS_18661_3__\fP   2"
.br
.ti -1c
.RI "#define \fB__UINT32_MAX__\fP   0xffffffffU"
.br
.ti -1c
.RI "#define \fB__GXX_EXPERIMENTAL_CXX0X__\fP   1"
.br
.ti -1c
.RI "#define \fB__LDBL_MAX_EXP__\fP   16384"
.br
.ti -1c
.RI "#define \fB__FLT128_MIN_EXP__\fP   (\-16381)"
.br
.ti -1c
.RI "#define \fB__WINT_MIN__\fP   0"
.br
.ti -1c
.RI "#define \fB__FLT128_MIN_10_EXP__\fP   (\-4931)"
.br
.ti -1c
.RI "#define \fB__INT_LEAST16_WIDTH__\fP   16"
.br
.ti -1c
.RI "#define \fB__SCHAR_MAX__\fP   0x7f"
.br
.ti -1c
.RI "#define \fB__FLT128_MANT_DIG__\fP   113"
.br
.ti -1c
.RI "#define \fB__WCHAR_MIN__\fP   0"
.br
.ti -1c
.RI "#define \fB__INT64_C\fP(c)   c ## LL"
.br
.ti -1c
.RI "#define \fB__DBL_DIG__\fP   15"
.br
.ti -1c
.RI "#define \fB__GCC_ATOMIC_POINTER_LOCK_FREE\fP   2"
.br
.ti -1c
.RI "#define \fB__FLT64X_MANT_DIG__\fP   64"
.br
.ti -1c
.RI "#define \fB__SIZEOF_INT__\fP   4"
.br
.ti -1c
.RI "#define \fB__SIZEOF_POINTER__\fP   4"
.br
.ti -1c
.RI "#define \fB__GCC_ATOMIC_CHAR16_T_LOCK_FREE\fP   2"
.br
.ti -1c
.RI "#define \fB__USER_LABEL_PREFIX__\fP   _"
.br
.ti -1c
.RI "#define \fB__FLT64X_EPSILON__\fP   1\&.08420217248550443400745280086994171e\-19F64x"
.br
.ti -1c
.RI "#define \fB__STDC_HOSTED__\fP   1"
.br
.ti -1c
.RI "#define \fB__WIN32\fP   1"
.br
.ti -1c
.RI "#define \fB__LDBL_HAS_INFINITY__\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT32_DIG__\fP   6"
.br
.ti -1c
.RI "#define \fB__FLT_EPSILON__\fP   1\&.19209289550781250000000000000000000e\-7F"
.br
.ti -1c
.RI "#define \fB__GXX_WEAK__\fP   1"
.br
.ti -1c
.RI "#define \fB__SHRT_WIDTH__\fP   16"
.br
.ti -1c
.RI "#define \fB__LDBL_MIN__\fP   3\&.36210314311209350626267781732175260e\-4932L"
.br
.ti -1c
.RI "#define \fB__DEC32_MAX__\fP   9\&.999999E96DF"
.br
.ti -1c
.RI "#define \fB__cpp_threadsafe_static_init\fP   200806"
.br
.ti -1c
.RI "#define \fB__FLT64X_DENORM_MIN__\fP   3\&.64519953188247460252840593361941982e\-4951F64x"
.br
.ti -1c
.RI "#define \fB__MINGW32__\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT32X_HAS_INFINITY__\fP   1"
.br
.ti -1c
.RI "#define \fB__INT32_MAX__\fP   0x7fffffff"
.br
.ti -1c
.RI "#define \fB__INT_WIDTH__\fP   32"
.br
.ti -1c
.RI "#define \fB__SIZEOF_LONG__\fP   4"
.br
.ti -1c
.RI "#define \fB__UINT16_C\fP(c)   c"
.br
.ti -1c
.RI "#define \fB__PTRDIFF_WIDTH__\fP   32"
.br
.ti -1c
.RI "#define \fB__DECIMAL_DIG__\fP   21"
.br
.ti -1c
.RI "#define \fB__FLT64_EPSILON__\fP   2\&.22044604925031308084726333618164062e\-16F64"
.br
.ti -1c
.RI "#define \fB__INTMAX_WIDTH__\fP   64"
.br
.ti -1c
.RI "#define \fB__FLT64_MIN_EXP__\fP   (\-1021)"
.br
.ti -1c
.RI "#define \fB__has_include_next\fP(STR)   __has_include_next__(STR)"
.br
.ti -1c
.RI "#define \fB__FLT64X_MIN_10_EXP__\fP   (\-4931)"
.br
.ti -1c
.RI "#define \fB__LDBL_HAS_QUIET_NAN__\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT64_MANT_DIG__\fP   53"
.br
.ti -1c
.RI "#define \fB_REENTRANT\fP   1"
.br
.ti -1c
.RI "#define \fB__GNUC__\fP   7"
.br
.ti -1c
.RI "#define \fB_cdecl\fP   __attribute__((__cdecl__))"
.br
.ti -1c
.RI "#define \fB__GXX_RTTI\fP   1"
.br
.ti -1c
.RI "#define \fB__cpp_delegating_constructors\fP   200604"
.br
.ti -1c
.RI "#define \fB__FLT_HAS_DENORM__\fP   1"
.br
.ti -1c
.RI "#define \fB__SIZEOF_LONG_DOUBLE__\fP   12"
.br
.ti -1c
.RI "#define \fB__BIGGEST_ALIGNMENT__\fP   16"
.br
.ti -1c
.RI "#define \fB__STDC_UTF_16__\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT64_MAX_10_EXP__\fP   308"
.br
.ti -1c
.RI "#define \fB__i686\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT32_HAS_INFINITY__\fP   1"
.br
.ti -1c
.RI "#define \fB__DBL_MAX__\fP   double(1\&.79769313486231570814527423731704357e+308L)"
.br
.ti -1c
.RI "#define \fB_thiscall\fP   __attribute__((__thiscall__))"
.br
.ti -1c
.RI "#define \fB__cpp_raw_strings\fP   200710"
.br
.ti -1c
.RI "#define \fB__INT_FAST32_MAX__\fP   0x7fffffff"
.br
.ti -1c
.RI "#define \fB__WINNT\fP   1"
.br
.ti -1c
.RI "#define \fB__DBL_HAS_INFINITY__\fP   1"
.br
.ti -1c
.RI "#define \fB__INT64_MAX__\fP   0x7fffffffffffffffLL"
.br
.ti -1c
.RI "#define \fB__WINNT__\fP   1"
.br
.ti -1c
.RI "#define \fB__DEC32_MIN_EXP__\fP   (\-94)"
.br
.ti -1c
.RI "#define \fB__INTPTR_WIDTH__\fP   32"
.br
.ti -1c
.RI "#define \fB__FLT32X_HAS_DENORM__\fP   1"
.br
.ti -1c
.RI "#define \fB__INT_FAST16_TYPE__\fP   short int"
.br
.ti -1c
.RI "#define \fB_fastcall\fP   __attribute__((__fastcall__))"
.br
.ti -1c
.RI "#define \fB__LDBL_HAS_DENORM__\fP   1"
.br
.ti -1c
.RI "#define \fB__cplusplus\fP   201103L"
.br
.ti -1c
.RI "#define \fB__cpp_ref_qualifiers\fP   200710"
.br
.ti -1c
.RI "#define \fB__DEC128_MAX__\fP   9\&.999999999999999999999999999999999E6144DL"
.br
.ti -1c
.RI "#define \fB__INT_LEAST32_MAX__\fP   0x7fffffff"
.br
.ti -1c
.RI "#define \fB__DEC32_MIN__\fP   1E\-95DF"
.br
.ti -1c
.RI "#define \fB__DEPRECATED\fP   1"
.br
.ti -1c
.RI "#define \fB__cpp_rvalue_references\fP   200610"
.br
.ti -1c
.RI "#define \fB__DBL_MAX_EXP__\fP   1024"
.br
.ti -1c
.RI "#define \fB__WCHAR_WIDTH__\fP   16"
.br
.ti -1c
.RI "#define \fB__FLT32_MAX__\fP   3\&.40282346638528859811704183484516925e+38F32"
.br
.ti -1c
.RI "#define \fB__DEC128_EPSILON__\fP   1E\-33DL"
.br
.ti -1c
.RI "#define \fB__ATOMIC_HLE_RELEASE\fP   131072"
.br
.ti -1c
.RI "#define \fB__WIN32__\fP   1"
.br
.ti -1c
.RI "#define \fB__PTRDIFF_MAX__\fP   0x7fffffff"
.br
.ti -1c
.RI "#define \fB__ATOMIC_HLE_ACQUIRE\fP   65536"
.br
.ti -1c
.RI "#define \fB__FLT32_HAS_QUIET_NAN__\fP   1"
.br
.ti -1c
.RI "#define \fB__GNUG__\fP   7"
.br
.ti -1c
.RI "#define \fB__LONG_LONG_MAX__\fP   0x7fffffffffffffffLL"
.br
.ti -1c
.RI "#define \fB__SIZEOF_SIZE_T__\fP   4"
.br
.ti -1c
.RI "#define \fB__cpp_rvalue_reference\fP   200610"
.br
.ti -1c
.RI "#define \fB__cpp_nsdmi\fP   200809"
.br
.ti -1c
.RI "#define \fB__FLT64X_MIN_EXP__\fP   (\-16381)"
.br
.ti -1c
.RI "#define \fB__SIZEOF_WINT_T__\fP   2"
.br
.ti -1c
.RI "#define \fB__LONG_LONG_WIDTH__\fP   64"
.br
.ti -1c
.RI "#define \fB__cpp_initializer_lists\fP   200806"
.br
.ti -1c
.RI "#define \fB__FLT32_MAX_EXP__\fP   128"
.br
.ti -1c
.RI "#define \fB__cpp_hex_float\fP   201603"
.br
.ti -1c
.RI "#define \fB__GCC_HAVE_DWARF2_CFI_ASM\fP   1"
.br
.ti -1c
.RI "#define \fB__GXX_ABI_VERSION\fP   1011"
.br
.ti -1c
.RI "#define \fB__FLT128_HAS_INFINITY__\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT_MIN_EXP__\fP   (\-125)"
.br
.ti -1c
.RI "#define \fB__i686__\fP   1"
.br
.ti -1c
.RI "#define \fB__cpp_lambdas\fP   200907"
.br
.ti -1c
.RI "#define \fB__FLT64X_HAS_QUIET_NAN__\fP   1"
.br
.ti -1c
.RI "#define \fB__INT_FAST64_TYPE__\fP   long long int"
.br
.ti -1c
.RI "#define \fB__FLT64_DENORM_MIN__\fP   4\&.94065645841246544176568792868221372e\-324F64"
.br
.ti -1c
.RI "#define \fB__DBL_MIN__\fP   double(2\&.22507385850720138309023271733240406e\-308L)"
.br
.ti -1c
.RI "#define \fB__FLT32X_EPSILON__\fP   2\&.22044604925031308084726333618164062e\-16F32x"
.br
.ti -1c
.RI "#define \fB__DECIMAL_BID_FORMAT__\fP   1"
.br
.ti -1c
.RI "#define \fB__GXX_TYPEINFO_EQUALITY_INLINE\fP   0"
.br
.ti -1c
.RI "#define \fB__FLT64_MIN_10_EXP__\fP   (\-307)"
.br
.ti -1c
.RI "#define \fB__FLT64X_DECIMAL_DIG__\fP   21"
.br
.ti -1c
.RI "#define \fB__DEC128_MIN__\fP   1E\-6143DL"
.br
.ti -1c
.RI "#define \fB__REGISTER_PREFIX__\fP"
.br
.ti -1c
.RI "#define \fB__UINT16_MAX__\fP   0xffff"
.br
.ti -1c
.RI "#define \fB__DBL_HAS_DENORM__\fP   1"
.br
.ti -1c
.RI "#define \fB__cdecl\fP   __attribute__((__cdecl__))"
.br
.ti -1c
.RI "#define \fB__FLT32_MIN__\fP   1\&.17549435082228750796873653722224568e\-38F32"
.br
.ti -1c
.RI "#define \fB__UINT8_TYPE__\fP   unsigned char"
.br
.ti -1c
.RI "#define \fB__NO_INLINE__\fP   1"
.br
.ti -1c
.RI "#define \fB__i386\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT_MANT_DIG__\fP   24"
.br
.ti -1c
.RI "#define \fB__LDBL_DECIMAL_DIG__\fP   21"
.br
.ti -1c
.RI "#define \fB__VERSION__\fP   '7\&.3\&.0'"
.br
.ti -1c
.RI "#define \fB__UINT64_C\fP(c)   c ## ULL"
.br
.ti -1c
.RI "#define \fB__cpp_unicode_characters\fP   200704"
.br
.ti -1c
.RI "#define \fB__GCC_ATOMIC_INT_LOCK_FREE\fP   2"
.br
.ti -1c
.RI "#define \fB__FLT128_MAX_EXP__\fP   16384"
.br
.ti -1c
.RI "#define \fB__FLT32_MANT_DIG__\fP   24"
.br
.ti -1c
.RI "#define \fB_X86_\fP   1"
.br
.ti -1c
.RI "#define \fB__FLOAT_WORD_ORDER__\fP   \fB__ORDER_LITTLE_ENDIAN__\fP"
.br
.ti -1c
.RI "#define \fB__FLT128_HAS_DENORM__\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT128_DIG__\fP   33"
.br
.ti -1c
.RI "#define \fB__SCHAR_WIDTH__\fP   8"
.br
.ti -1c
.RI "#define \fB__INT32_C\fP(c)   c"
.br
.ti -1c
.RI "#define \fB__DEC64_EPSILON__\fP   1E\-15DD"
.br
.ti -1c
.RI "#define \fB__ORDER_PDP_ENDIAN__\fP   3412"
.br
.ti -1c
.RI "#define \fB__DEC128_MIN_EXP__\fP   (\-6142)"
.br
.ti -1c
.RI "#define \fB__code_model_32__\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT32_MAX_10_EXP__\fP   38"
.br
.ti -1c
.RI "#define \fB__INT_FAST32_TYPE__\fP   int"
.br
.ti -1c
.RI "#define \fB__UINT_LEAST16_TYPE__\fP   short unsigned int"
.br
.ti -1c
.RI "#define \fB__FLT64X_HAS_INFINITY__\fP   1"
.br
.ti -1c
.RI "#define \fB__INT16_MAX__\fP   0x7fff"
.br
.ti -1c
.RI "#define \fB__i386__\fP   1"
.br
.ti -1c
.RI "#define \fB__cpp_rtti\fP   199711"
.br
.ti -1c
.RI "#define \fB__SIZE_TYPE__\fP   unsigned int"
.br
.ti -1c
.RI "#define \fB__UINT64_MAX__\fP   0xffffffffffffffffULL"
.br
.ti -1c
.RI "#define \fB__FLT64X_DIG__\fP   18"
.br
.ti -1c
.RI "#define \fB__INT8_TYPE__\fP   signed char"
.br
.ti -1c
.RI "#define \fB__GCC_ASM_FLAG_OUTPUTS__\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT_RADIX__\fP   2"
.br
.ti -1c
.RI "#define \fB__INT_LEAST16_TYPE__\fP   short int"
.br
.ti -1c
.RI "#define \fB__LDBL_EPSILON__\fP   1\&.08420217248550443400745280086994171e\-19L"
.br
.ti -1c
.RI "#define \fB__UINTMAX_C\fP(c)   c ## ULL"
.br
.ti -1c
.RI "#define \fB__SIG_ATOMIC_MAX__\fP   0x7fffffff"
.br
.ti -1c
.RI "#define \fB__GCC_ATOMIC_WCHAR_T_LOCK_FREE\fP   2"
.br
.ti -1c
.RI "#define \fB__SIZEOF_PTRDIFF_T__\fP   4"
.br
.ti -1c
.RI "#define \fB__FLT32X_MANT_DIG__\fP   53"
.br
.ti -1c
.RI "#define \fB__FLT32X_MIN_EXP__\fP   (\-1021)"
.br
.ti -1c
.RI "#define \fB__DEC32_SUBNORMAL_MIN__\fP   0\&.000001E\-95DF"
.br
.ti -1c
.RI "#define \fB__pentiumpro\fP   1"
.br
.ti -1c
.RI "#define \fB__MSVCRT__\fP   1"
.br
.ti -1c
.RI "#define \fB__INT_FAST16_MAX__\fP   0x7fff"
.br
.ti -1c
.RI "#define \fB__FLT64_DIG__\fP   15"
.br
.ti -1c
.RI "#define \fB__UINT_FAST32_MAX__\fP   0xffffffffU"
.br
.ti -1c
.RI "#define \fB__UINT_LEAST64_TYPE__\fP   long long unsigned int"
.br
.ti -1c
.RI "#define \fB__FLT_HAS_QUIET_NAN__\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT_MAX_10_EXP__\fP   38"
.br
.ti -1c
.RI "#define \fB__LONG_MAX__\fP   0x7fffffffL"
.br
.ti -1c
.RI "#define \fB__FLT64X_HAS_DENORM__\fP   1"
.br
.ti -1c
.RI "#define \fB__DEC128_SUBNORMAL_MIN__\fP   0\&.000000000000000000000000000000001E\-6143DL"
.br
.ti -1c
.RI "#define \fB__FLT_HAS_INFINITY__\fP   1"
.br
.ti -1c
.RI "#define \fB__cpp_unicode_literals\fP   200710"
.br
.ti -1c
.RI "#define \fB__UINT_FAST16_TYPE__\fP   short unsigned int"
.br
.ti -1c
.RI "#define \fB__DEC64_MAX__\fP   9\&.999999999999999E384DD"
.br
.ti -1c
.RI "#define \fB__INT_FAST32_WIDTH__\fP   32"
.br
.ti -1c
.RI "#define \fB__CHAR16_TYPE__\fP   short unsigned int"
.br
.ti -1c
.RI "#define \fB__PRAGMA_REDEFINE_EXTNAME\fP   1"
.br
.ti -1c
.RI "#define \fB__SIZE_WIDTH__\fP   32"
.br
.ti -1c
.RI "#define \fB__SEG_FS\fP   1"
.br
.ti -1c
.RI "#define \fB__INT_LEAST16_MAX__\fP   0x7fff"
.br
.ti -1c
.RI "#define \fB__DEC64_MANT_DIG__\fP   16"
.br
.ti -1c
.RI "#define \fB__UINT_LEAST32_MAX__\fP   0xffffffffU"
.br
.ti -1c
.RI "#define \fB__SEG_GS\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT32_DENORM_MIN__\fP   1\&.40129846432481707092372958328991613e\-45F32"
.br
.ti -1c
.RI "#define \fB__GCC_ATOMIC_LONG_LOCK_FREE\fP   2"
.br
.ti -1c
.RI "#define \fB__SIG_ATOMIC_WIDTH__\fP   32"
.br
.ti -1c
.RI "#define \fB__INT_LEAST64_TYPE__\fP   long long int"
.br
.ti -1c
.RI "#define \fB__INT16_TYPE__\fP   short int"
.br
.ti -1c
.RI "#define \fB__INT_LEAST8_TYPE__\fP   signed char"
.br
.ti -1c
.RI "#define \fB__DEC32_MAX_EXP__\fP   97"
.br
.ti -1c
.RI "#define \fB__INT_FAST8_MAX__\fP   0x7f"
.br
.ti -1c
.RI "#define \fB__FLT128_MAX__\fP   1\&.18973149535723176508575932662800702e+4932F128"
.br
.ti -1c
.RI "#define \fB__INTPTR_MAX__\fP   0x7fffffff"
.br
.ti -1c
.RI "#define \fB__GXX_MERGED_TYPEINFO_NAMES\fP   0"
.br
.ti -1c
.RI "#define \fB__cpp_range_based_for\fP   200907"
.br
.ti -1c
.RI "#define \fB__FLT64_HAS_QUIET_NAN__\fP   1"
.br
.ti -1c
.RI "#define \fB__stdcall\fP   __attribute__((__stdcall__))"
.br
.ti -1c
.RI "#define \fB__FLT32_MIN_10_EXP__\fP   (\-37)"
.br
.ti -1c
.RI "#define \fB__EXCEPTIONS\fP   1"
.br
.ti -1c
.RI "#define \fB__LDBL_MANT_DIG__\fP   64"
.br
.ti -1c
.RI "#define \fB__DBL_HAS_QUIET_NAN__\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT64_HAS_INFINITY__\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT64X_MAX__\fP   1\&.18973149535723176502126385303097021e+4932F64x"
.br
.ti -1c
.RI "#define \fB__SIG_ATOMIC_MIN__\fP   (\-\fB__SIG_ATOMIC_MAX__\fP \- 1)"
.br
.ti -1c
.RI "#define \fB__INTPTR_TYPE__\fP   int"
.br
.ti -1c
.RI "#define \fB__UINT16_TYPE__\fP   short unsigned int"
.br
.ti -1c
.RI "#define \fB__WCHAR_TYPE__\fP   short unsigned int"
.br
.ti -1c
.RI "#define \fB__SIZEOF_FLOAT__\fP   4"
.br
.ti -1c
.RI "#define \fB__UINTPTR_MAX__\fP   0xffffffffU"
.br
.ti -1c
.RI "#define \fB__INT_FAST64_WIDTH__\fP   64"
.br
.ti -1c
.RI "#define \fB__DEC64_MIN_EXP__\fP   (\-382)"
.br
.ti -1c
.RI "#define \fB__cpp_decltype\fP   200707"
.br
.ti -1c
.RI "#define \fB__FLT32_DECIMAL_DIG__\fP   9"
.br
.ti -1c
.RI "#define \fB__INT_FAST64_MAX__\fP   0x7fffffffffffffffLL"
.br
.ti -1c
.RI "#define \fB__GCC_ATOMIC_TEST_AND_SET_TRUEVAL\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT_DIG__\fP   6"
.br
.ti -1c
.RI "#define \fB__FLT64X_MAX_EXP__\fP   16384"
.br
.ti -1c
.RI "#define \fB__UINT_FAST64_TYPE__\fP   long long unsigned int"
.br
.ti -1c
.RI "#define \fB__INT_MAX__\fP   0x7fffffff"
.br
.ti -1c
.RI "#define \fBWIN32\fP   1"
.br
.ti -1c
.RI "#define \fB__INT64_TYPE__\fP   long long int"
.br
.ti -1c
.RI "#define \fB__FLT_MAX_EXP__\fP   128"
.br
.ti -1c
.RI "#define \fB__DBL_MANT_DIG__\fP   53"
.br
.ti -1c
.RI "#define \fB__cpp_inheriting_constructors\fP   201511"
.br
.ti -1c
.RI "#define \fB__SIZEOF_FLOAT128__\fP   16"
.br
.ti -1c
.RI "#define \fB__INT_LEAST64_MAX__\fP   0x7fffffffffffffffLL"
.br
.ti -1c
.RI "#define \fB__DEC64_MIN__\fP   1E\-383DD"
.br
.ti -1c
.RI "#define \fB__WINT_TYPE__\fP   short unsigned int"
.br
.ti -1c
.RI "#define \fB__UINT_LEAST32_TYPE__\fP   unsigned int"
.br
.ti -1c
.RI "#define \fB__SIZEOF_SHORT__\fP   2"
.br
.ti -1c
.RI "#define \fB__LDBL_MIN_EXP__\fP   (\-16381)"
.br
.ti -1c
.RI "#define \fB__FLT64_MAX__\fP   1\&.79769313486231570814527423731704357e+308F64"
.br
.ti -1c
.RI "#define \fB__WINT_WIDTH__\fP   16"
.br
.ti -1c
.RI "#define \fB__INT_LEAST8_MAX__\fP   0x7f"
.br
.ti -1c
.RI "#define \fB__FLT32X_MAX_10_EXP__\fP   308"
.br
.ti -1c
.RI "#define \fB__WCHAR_UNSIGNED__\fP   1"
.br
.ti -1c
.RI "#define \fB__LDBL_MAX_10_EXP__\fP   4932"
.br
.ti -1c
.RI "#define \fB__ATOMIC_RELAXED\fP   0"
.br
.ti -1c
.RI "#define \fB__DBL_EPSILON__\fP   double(2\&.22044604925031308084726333618164062e\-16L)"
.br
.ti -1c
.RI "#define \fB__thiscall\fP   __attribute__((__thiscall__))"
.br
.ti -1c
.RI "#define \fB__FLT128_MIN__\fP   3\&.36210314311209350626267781732175260e\-4932F128"
.br
.ti -1c
.RI "#define \fB__UINT8_C\fP(c)   c"
.br
.ti -1c
.RI "#define \fB__FLT64_MAX_EXP__\fP   1024"
.br
.ti -1c
.RI "#define \fB__INT_LEAST32_TYPE__\fP   int"
.br
.ti -1c
.RI "#define \fB__SIZEOF_WCHAR_T__\fP   2"
.br
.ti -1c
.RI "#define \fB__FLT128_HAS_QUIET_NAN__\fP   1"
.br
.ti -1c
.RI "#define \fB__INT_FAST8_TYPE__\fP   signed char"
.br
.ti -1c
.RI "#define \fB__fastcall\fP   __attribute__((__fastcall__))"
.br
.ti -1c
.RI "#define \fB__FLT64X_MIN__\fP   3\&.36210314311209350626267781732175260e\-4932F64x"
.br
.ti -1c
.RI "#define \fB__GNUC_STDC_INLINE__\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT64_HAS_DENORM__\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT32_EPSILON__\fP   1\&.19209289550781250000000000000000000e\-7F32"
.br
.ti -1c
.RI "#define \fB__DBL_DECIMAL_DIG__\fP   17"
.br
.ti -1c
.RI "#define \fB__STDC_UTF_32__\fP   1"
.br
.ti -1c
.RI "#define \fB__INT_FAST8_WIDTH__\fP   8"
.br
.ti -1c
.RI "#define \fB__DEC_EVAL_METHOD__\fP   2"
.br
.ti -1c
.RI "#define \fB__FLT32X_MAX__\fP   1\&.79769313486231570814527423731704357e+308F32x"
.br
.ti -1c
.RI "#define \fB__ORDER_BIG_ENDIAN__\fP   4321"
.br
.ti -1c
.RI "#define \fB__cpp_runtime_arrays\fP   198712"
.br
.ti -1c
.RI "#define \fB__UINT64_TYPE__\fP   long long unsigned int"
.br
.ti -1c
.RI "#define \fB__UINT32_C\fP(c)   c ## U"
.br
.ti -1c
.RI "#define \fB__INTMAX_MAX__\fP   0x7fffffffffffffffLL"
.br
.ti -1c
.RI "#define \fB__cpp_alias_templates\fP   200704"
.br
.ti -1c
.RI "#define \fB__BYTE_ORDER__\fP   \fB__ORDER_LITTLE_ENDIAN__\fP"
.br
.ti -1c
.RI "#define \fBWINNT\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT_DENORM_MIN__\fP   1\&.40129846432481707092372958328991613e\-45F"
.br
.ti -1c
.RI "#define \fB__INT8_MAX__\fP   0x7f"
.br
.ti -1c
.RI "#define \fB__LONG_WIDTH__\fP   32"
.br
.ti -1c
.RI "#define \fB__UINT_FAST32_TYPE__\fP   unsigned int"
.br
.ti -1c
.RI "#define \fB__CHAR32_TYPE__\fP   unsigned int"
.br
.ti -1c
.RI "#define \fB__FLT_MAX__\fP   3\&.40282346638528859811704183484516925e+38F"
.br
.ti -1c
.RI "#define \fB__cpp_constexpr\fP   200704"
.br
.ti -1c
.RI "#define \fB__INT32_TYPE__\fP   int"
.br
.ti -1c
.RI "#define \fB__SIZEOF_DOUBLE__\fP   8"
.br
.ti -1c
.RI "#define \fB__cpp_exceptions\fP   199711"
.br
.ti -1c
.RI "#define \fB__FLT_MIN_10_EXP__\fP   (\-37)"
.br
.ti -1c
.RI "#define \fB__FLT64_MIN__\fP   2\&.22507385850720138309023271733240406e\-308F64"
.br
.ti -1c
.RI "#define \fB__INT_LEAST32_WIDTH__\fP   32"
.br
.ti -1c
.RI "#define \fB__INTMAX_TYPE__\fP   long long int"
.br
.ti -1c
.RI "#define \fBi386\fP   1"
.br
.ti -1c
.RI "#define \fB_INTEGRAL_MAX_BITS\fP   64"
.br
.ti -1c
.RI "#define \fB__DEC128_MAX_EXP__\fP   6145"
.br
.ti -1c
.RI "#define \fB__FLT32X_HAS_QUIET_NAN__\fP   1"
.br
.ti -1c
.RI "#define \fB__ATOMIC_CONSUME\fP   1"
.br
.ti -1c
.RI "#define \fB__GNUC_MINOR__\fP   3"
.br
.ti -1c
.RI "#define \fB__INT_FAST16_WIDTH__\fP   16"
.br
.ti -1c
.RI "#define \fB__UINTMAX_MAX__\fP   0xffffffffffffffffULL"
.br
.ti -1c
.RI "#define \fB__DEC32_MANT_DIG__\fP   7"
.br
.ti -1c
.RI "#define \fB__FLT32X_DENORM_MIN__\fP   4\&.94065645841246544176568792868221372e\-324F32x"
.br
.ti -1c
.RI "#define \fB__DBL_MAX_10_EXP__\fP   308"
.br
.ti -1c
.RI "#define \fB__LDBL_DENORM_MIN__\fP   3\&.64519953188247460252840593361941982e\-4951L"
.br
.ti -1c
.RI "#define \fB__INT16_C\fP(c)   c"
.br
.ti -1c
.RI "#define \fB__STDC__\fP   1"
.br
.ti -1c
.RI "#define \fB__FLT32X_DIG__\fP   15"
.br
.ti -1c
.RI "#define \fB__PTRDIFF_TYPE__\fP   int"
.br
.ti -1c
.RI "#define \fB__ATOMIC_SEQ_CST\fP   5"
.br
.ti -1c
.RI "#define \fB__UINT32_TYPE__\fP   unsigned int"
.br
.ti -1c
.RI "#define \fB__FLT32X_MIN_10_EXP__\fP   (\-307)"
.br
.ti -1c
.RI "#define \fB__UINTPTR_TYPE__\fP   unsigned int"
.br
.ti -1c
.RI "#define \fB__DEC64_SUBNORMAL_MIN__\fP   0\&.000000000000001E\-383DD"
.br
.ti -1c
.RI "#define \fB__DEC128_MANT_DIG__\fP   34"
.br
.ti -1c
.RI "#define \fB__LDBL_MIN_10_EXP__\fP   (\-4931)"
.br
.ti -1c
.RI "#define \fB__FLT128_EPSILON__\fP   1\&.92592994438723585305597794258492732e\-34F128"
.br
.ti -1c
.RI "#define \fB__SIZEOF_LONG_LONG__\fP   8"
.br
.ti -1c
.RI "#define \fB__cpp_user_defined_literals\fP   200809"
.br
.ti -1c
.RI "#define \fB__FLT128_DECIMAL_DIG__\fP   36"
.br
.ti -1c
.RI "#define \fB__GCC_ATOMIC_LLONG_LOCK_FREE\fP   2"
.br
.ti -1c
.RI "#define \fB__FLT32X_MIN__\fP   2\&.22507385850720138309023271733240406e\-308F32x"
.br
.ti -1c
.RI "#define \fB__LDBL_DIG__\fP   18"
.br
.ti -1c
.RI "#define \fB__FLT_DECIMAL_DIG__\fP   9"
.br
.ti -1c
.RI "#define \fB__UINT_FAST16_MAX__\fP   0xffff"
.br
.ti -1c
.RI "#define \fB__GCC_ATOMIC_SHORT_LOCK_FREE\fP   2"
.br
.ti -1c
.RI "#define \fB__INT_LEAST64_WIDTH__\fP   64"
.br
.ti -1c
.RI "#define \fB__UINT_FAST8_TYPE__\fP   unsigned char"
.br
.ti -1c
.RI "#define \fB__ATOMIC_ACQ_REL\fP   4"
.br
.ti -1c
.RI "#define \fB__ATOMIC_RELEASE\fP   3"
.br
.ti -1c
.RI "#define \fB__declspec\fP(x)   __attribute__((x))"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define __ATOMIC_ACQ_REL   4"

.PP
Definition at line 374 of file moc_predefs\&.h\&.
.SS "#define __ATOMIC_ACQUIRE   2"

.PP
Definition at line 6 of file moc_predefs\&.h\&.
.SS "#define __ATOMIC_CONSUME   1"

.PP
Definition at line 343 of file moc_predefs\&.h\&.
.SS "#define __ATOMIC_HLE_ACQUIRE   65536"

.PP
Definition at line 142 of file moc_predefs\&.h\&.
.SS "#define __ATOMIC_HLE_RELEASE   131072"

.PP
Definition at line 139 of file moc_predefs\&.h\&.
.SS "#define __ATOMIC_RELAXED   0"

.PP
Definition at line 297 of file moc_predefs\&.h\&.
.SS "#define __ATOMIC_RELEASE   3"

.PP
Definition at line 375 of file moc_predefs\&.h\&.
.SS "#define __ATOMIC_SEQ_CST   5"

.PP
Definition at line 355 of file moc_predefs\&.h\&.
.SS "#define __BIGGEST_ALIGNMENT__   16"

.PP
Definition at line 109 of file moc_predefs\&.h\&.
.SS "#define __BYTE_ORDER__   \fB__ORDER_LITTLE_ENDIAN__\fP"

.PP
Definition at line 323 of file moc_predefs\&.h\&.
.SS "#define __cdecl   __attribute__((__cdecl__))"

.PP
Definition at line 174 of file moc_predefs\&.h\&.
.SS "#define __CHAR16_TYPE__   short unsigned int"

.PP
Definition at line 235 of file moc_predefs\&.h\&.
.SS "#define __CHAR32_TYPE__   unsigned int"

.PP
Definition at line 329 of file moc_predefs\&.h\&.
.SS "#define __CHAR_BIT__   8"

.PP
Definition at line 14 of file moc_predefs\&.h\&.
.SS "#define __code_model_32__   1"

.PP
Definition at line 196 of file moc_predefs\&.h\&.
.SS "#define __cplusplus   201103L"

.PP
Definition at line 128 of file moc_predefs\&.h\&.
.SS "#define __cpp_alias_templates   200704"

.PP
Definition at line 322 of file moc_predefs\&.h\&.
.SS "#define __cpp_attributes   200809"

.PP
Definition at line 3 of file moc_predefs\&.h\&.
.SS "#define __cpp_binary_literals   201304"

.PP
Definition at line 31 of file moc_predefs\&.h\&.
.SS "#define __cpp_constexpr   200704"

.PP
Definition at line 331 of file moc_predefs\&.h\&.
.SS "#define __cpp_decltype   200707"

.PP
Definition at line 271 of file moc_predefs\&.h\&.
.SS "#define __cpp_delegating_constructors   200604"

.PP
Definition at line 106 of file moc_predefs\&.h\&.
.SS "#define __cpp_exceptions   199711"

.PP
Definition at line 334 of file moc_predefs\&.h\&.
.SS "#define __cpp_hex_float   201603"

.PP
Definition at line 154 of file moc_predefs\&.h\&.
.SS "#define __cpp_inheriting_constructors   201511"

.PP
Definition at line 283 of file moc_predefs\&.h\&.
.SS "#define __cpp_initializer_lists   200806"

.PP
Definition at line 152 of file moc_predefs\&.h\&.
.SS "#define __cpp_lambdas   200907"

.PP
Definition at line 160 of file moc_predefs\&.h\&.
.SS "#define __cpp_nsdmi   200809"

.PP
Definition at line 148 of file moc_predefs\&.h\&.
.SS "#define __cpp_range_based_for   200907"

.PP
Definition at line 254 of file moc_predefs\&.h\&.
.SS "#define __cpp_raw_strings   200710"

.PP
Definition at line 116 of file moc_predefs\&.h\&.
.SS "#define __cpp_ref_qualifiers   200710"

.PP
Definition at line 129 of file moc_predefs\&.h\&.
.SS "#define __cpp_rtti   199711"

.PP
Definition at line 203 of file moc_predefs\&.h\&.
.SS "#define __cpp_runtime_arrays   198712"

.PP
Definition at line 318 of file moc_predefs\&.h\&.
.SS "#define __cpp_rvalue_reference   200610"

.PP
Definition at line 147 of file moc_predefs\&.h\&.
.SS "#define __cpp_rvalue_references   200610"

.PP
Definition at line 134 of file moc_predefs\&.h\&.
.SS "#define __cpp_static_assert   200410"

.PP
Definition at line 18 of file moc_predefs\&.h\&.
.SS "#define __cpp_threadsafe_static_init   200806"

.PP
Definition at line 85 of file moc_predefs\&.h\&.
.SS "#define __cpp_unicode_characters   200704"

.PP
Definition at line 183 of file moc_predefs\&.h\&.
.SS "#define __cpp_unicode_literals   200710"

.PP
Definition at line 231 of file moc_predefs\&.h\&.
.SS "#define __cpp_user_defined_literals   200809"

.PP
Definition at line 364 of file moc_predefs\&.h\&.
.SS "#define __cpp_variadic_templates   200704"

.PP
Definition at line 34 of file moc_predefs\&.h\&.
.SS "#define __DBL_DECIMAL_DIG__   17"

.PP
Definition at line 312 of file moc_predefs\&.h\&.
.SS "#define __DBL_DENORM_MIN__   double(4\&.94065645841246544176568792868221372e\-324L)"

.PP
Definition at line 25 of file moc_predefs\&.h\&.
.SS "#define __DBL_DIG__   15"

.PP
Definition at line 68 of file moc_predefs\&.h\&.
.SS "#define __DBL_EPSILON__   double(2\&.22044604925031308084726333618164062e\-16L)"

.PP
Definition at line 298 of file moc_predefs\&.h\&.
.SS "#define __DBL_HAS_DENORM__   1"

.PP
Definition at line 173 of file moc_predefs\&.h\&.
.SS "#define __DBL_HAS_INFINITY__   1"

.PP
Definition at line 119 of file moc_predefs\&.h\&.
.SS "#define __DBL_HAS_QUIET_NAN__   1"

.PP
Definition at line 260 of file moc_predefs\&.h\&.
.SS "#define __DBL_MANT_DIG__   53"

.PP
Definition at line 282 of file moc_predefs\&.h\&.
.SS "#define __DBL_MAX_10_EXP__   308"

.PP
Definition at line 349 of file moc_predefs\&.h\&.
.SS "#define __DBL_MAX__   double(1\&.79769313486231570814527423731704357e+308L)"

.PP
Definition at line 114 of file moc_predefs\&.h\&.
.SS "#define __DBL_MAX_EXP__   1024"

.PP
Definition at line 135 of file moc_predefs\&.h\&.
.SS "#define __DBL_MIN_10_EXP__   (\-307)"

.PP
Definition at line 37 of file moc_predefs\&.h\&.
.SS "#define __DBL_MIN__   double(2\&.22507385850720138309023271733240406e\-308L)"

.PP
Definition at line 164 of file moc_predefs\&.h\&.
.SS "#define __DBL_MIN_EXP__   (\-1021)"

.PP
Definition at line 1 of file moc_predefs\&.h\&.
.SS "#define __DEC128_EPSILON__   1E\-33DL"

.PP
Definition at line 138 of file moc_predefs\&.h\&.
.SS "#define __DEC128_MANT_DIG__   34"

.PP
Definition at line 360 of file moc_predefs\&.h\&.
.SS "#define __DEC128_MAX__   9\&.999999999999999999999999999999999E6144DL"

.PP
Definition at line 130 of file moc_predefs\&.h\&.
.SS "#define __DEC128_MAX_EXP__   6145"

.PP
Definition at line 341 of file moc_predefs\&.h\&.
.SS "#define __DEC128_MIN__   1E\-6143DL"

.PP
Definition at line 170 of file moc_predefs\&.h\&.
.SS "#define __DEC128_MIN_EXP__   (\-6142)"

.PP
Definition at line 195 of file moc_predefs\&.h\&.
.SS "#define __DEC128_SUBNORMAL_MIN__   0\&.000000000000000000000000000000001E\-6143DL"

.PP
Definition at line 229 of file moc_predefs\&.h\&.
.SS "#define __DEC32_EPSILON__   1E\-6DF"

.PP
Definition at line 55 of file moc_predefs\&.h\&.
.SS "#define __DEC32_MANT_DIG__   7"

.PP
Definition at line 347 of file moc_predefs\&.h\&.
.SS "#define __DEC32_MAX__   9\&.999999E96DF"

.PP
Definition at line 84 of file moc_predefs\&.h\&.
.SS "#define __DEC32_MAX_EXP__   97"

.PP
Definition at line 249 of file moc_predefs\&.h\&.
.SS "#define __DEC32_MIN__   1E\-95DF"

.PP
Definition at line 132 of file moc_predefs\&.h\&.
.SS "#define __DEC32_MIN_EXP__   (\-94)"

.PP
Definition at line 122 of file moc_predefs\&.h\&.
.SS "#define __DEC32_SUBNORMAL_MIN__   0\&.000001E\-95DF"

.PP
Definition at line 218 of file moc_predefs\&.h\&.
.SS "#define __DEC64_EPSILON__   1E\-15DD"

.PP
Definition at line 193 of file moc_predefs\&.h\&.
.SS "#define __DEC64_MANT_DIG__   16"

.PP
Definition at line 240 of file moc_predefs\&.h\&.
.SS "#define __DEC64_MAX__   9\&.999999999999999E384DD"

.PP
Definition at line 233 of file moc_predefs\&.h\&.
.SS "#define __DEC64_MAX_EXP__   385"

.PP
Definition at line 44 of file moc_predefs\&.h\&.
.SS "#define __DEC64_MIN__   1E\-383DD"

.PP
Definition at line 286 of file moc_predefs\&.h\&.
.SS "#define __DEC64_MIN_EXP__   (\-382)"

.PP
Definition at line 270 of file moc_predefs\&.h\&.
.SS "#define __DEC64_SUBNORMAL_MIN__   0\&.000000000000001E\-383DD"

.PP
Definition at line 359 of file moc_predefs\&.h\&.
.SS "#define __DEC_EVAL_METHOD__   2"

.PP
Definition at line 315 of file moc_predefs\&.h\&.
.SS "#define __DECIMAL_BID_FORMAT__   1"

.PP
Definition at line 166 of file moc_predefs\&.h\&.
.SS "#define __DECIMAL_DIG__   21"

.PP
Definition at line 94 of file moc_predefs\&.h\&.
.SS "#define __declspec(x)   __attribute__((x))"

.PP
Definition at line 376 of file moc_predefs\&.h\&.
.SS "#define __DEPRECATED   1"

.PP
Definition at line 133 of file moc_predefs\&.h\&.
.SS "#define __EXCEPTIONS   1"

.PP
Definition at line 258 of file moc_predefs\&.h\&.
.SS "#define __fastcall   __attribute__((__fastcall__))"

.PP
Definition at line 307 of file moc_predefs\&.h\&.
.SS "#define __FINITE_MATH_ONLY__   0"

.PP
Definition at line 38 of file moc_predefs\&.h\&.
.SS "#define __FLOAT_WORD_ORDER__   \fB__ORDER_LITTLE_ENDIAN__\fP"

.PP
Definition at line 188 of file moc_predefs\&.h\&.
.SS "#define __FLT128_DECIMAL_DIG__   36"

.PP
Definition at line 365 of file moc_predefs\&.h\&.
.SS "#define __FLT128_DENORM_MIN__   6\&.47517511943802511092443895822764655e\-4966F128"

.PP
Definition at line 53 of file moc_predefs\&.h\&.
.SS "#define __FLT128_DIG__   33"

.PP
Definition at line 190 of file moc_predefs\&.h\&.
.SS "#define __FLT128_EPSILON__   1\&.92592994438723585305597794258492732e\-34F128"

.PP
Definition at line 362 of file moc_predefs\&.h\&.
.SS "#define __FLT128_HAS_DENORM__   1"

.PP
Definition at line 189 of file moc_predefs\&.h\&.
.SS "#define __FLT128_HAS_INFINITY__   1"

.PP
Definition at line 157 of file moc_predefs\&.h\&.
.SS "#define __FLT128_HAS_QUIET_NAN__   1"

.PP
Definition at line 305 of file moc_predefs\&.h\&.
.SS "#define __FLT128_MANT_DIG__   113"

.PP
Definition at line 65 of file moc_predefs\&.h\&.
.SS "#define __FLT128_MAX_10_EXP__   4932"

.PP
Definition at line 7 of file moc_predefs\&.h\&.
.SS "#define __FLT128_MAX__   1\&.18973149535723176508575932662800702e+4932F128"

.PP
Definition at line 251 of file moc_predefs\&.h\&.
.SS "#define __FLT128_MAX_EXP__   16384"

.PP
Definition at line 185 of file moc_predefs\&.h\&.
.SS "#define __FLT128_MIN_10_EXP__   (\-4931)"

.PP
Definition at line 62 of file moc_predefs\&.h\&.
.SS "#define __FLT128_MIN__   3\&.36210314311209350626267781732175260e\-4932F128"

.PP
Definition at line 300 of file moc_predefs\&.h\&.
.SS "#define __FLT128_MIN_EXP__   (\-16381)"

.PP
Definition at line 60 of file moc_predefs\&.h\&.
.SS "#define __FLT32_DECIMAL_DIG__   9"

.PP
Definition at line 272 of file moc_predefs\&.h\&.
.SS "#define __FLT32_DENORM_MIN__   1\&.40129846432481707092372958328991613e\-45F32"

.PP
Definition at line 243 of file moc_predefs\&.h\&.
.SS "#define __FLT32_DIG__   6"

.PP
Definition at line 79 of file moc_predefs\&.h\&.
.SS "#define __FLT32_EPSILON__   1\&.19209289550781250000000000000000000e\-7F32"

.PP
Definition at line 311 of file moc_predefs\&.h\&.
.SS "#define __FLT32_HAS_DENORM__   1"

.PP
Definition at line 40 of file moc_predefs\&.h\&.
.SS "#define __FLT32_HAS_INFINITY__   1"

.PP
Definition at line 113 of file moc_predefs\&.h\&.
.SS "#define __FLT32_HAS_QUIET_NAN__   1"

.PP
Definition at line 143 of file moc_predefs\&.h\&.
.SS "#define __FLT32_MANT_DIG__   24"

.PP
Definition at line 186 of file moc_predefs\&.h\&.
.SS "#define __FLT32_MAX_10_EXP__   38"

.PP
Definition at line 197 of file moc_predefs\&.h\&.
.SS "#define __FLT32_MAX__   3\&.40282346638528859811704183484516925e+38F32"

.PP
Definition at line 137 of file moc_predefs\&.h\&.
.SS "#define __FLT32_MAX_EXP__   128"

.PP
Definition at line 153 of file moc_predefs\&.h\&.
.SS "#define __FLT32_MIN_10_EXP__   (\-37)"

.PP
Definition at line 257 of file moc_predefs\&.h\&.
.SS "#define __FLT32_MIN__   1\&.17549435082228750796873653722224568e\-38F32"

.PP
Definition at line 175 of file moc_predefs\&.h\&.
.SS "#define __FLT32_MIN_EXP__   (\-125)"

.PP
Definition at line 17 of file moc_predefs\&.h\&.
.SS "#define __FLT32X_DECIMAL_DIG__   17"

.PP
Definition at line 29 of file moc_predefs\&.h\&.
.SS "#define __FLT32X_DENORM_MIN__   4\&.94065645841246544176568792868221372e\-324F32x"

.PP
Definition at line 348 of file moc_predefs\&.h\&.
.SS "#define __FLT32X_DIG__   15"

.PP
Definition at line 353 of file moc_predefs\&.h\&.
.SS "#define __FLT32X_EPSILON__   2\&.22044604925031308084726333618164062e\-16F32x"

.PP
Definition at line 165 of file moc_predefs\&.h\&.
.SS "#define __FLT32X_HAS_DENORM__   1"

.PP
Definition at line 124 of file moc_predefs\&.h\&.
.SS "#define __FLT32X_HAS_INFINITY__   1"

.PP
Definition at line 88 of file moc_predefs\&.h\&.
.SS "#define __FLT32X_HAS_QUIET_NAN__   1"

.PP
Definition at line 342 of file moc_predefs\&.h\&.
.SS "#define __FLT32X_MANT_DIG__   53"

.PP
Definition at line 216 of file moc_predefs\&.h\&.
.SS "#define __FLT32X_MAX_10_EXP__   308"

.PP
Definition at line 294 of file moc_predefs\&.h\&.
.SS "#define __FLT32X_MAX__   1\&.79769313486231570814527423731704357e+308F32x"

.PP
Definition at line 316 of file moc_predefs\&.h\&.
.SS "#define __FLT32X_MAX_EXP__   1024"

.PP
Definition at line 2 of file moc_predefs\&.h\&.
.SS "#define __FLT32X_MIN_10_EXP__   (\-307)"

.PP
Definition at line 357 of file moc_predefs\&.h\&.
.SS "#define __FLT32X_MIN__   2\&.22507385850720138309023271733240406e\-308F32x"

.PP
Definition at line 367 of file moc_predefs\&.h\&.
.SS "#define __FLT32X_MIN_EXP__   (\-1021)"

.PP
Definition at line 217 of file moc_predefs\&.h\&.
.SS "#define __FLT64_DECIMAL_DIG__   17"

.PP
Definition at line 32 of file moc_predefs\&.h\&.
.SS "#define __FLT64_DENORM_MIN__   4\&.94065645841246544176568792868221372e\-324F64"

.PP
Definition at line 163 of file moc_predefs\&.h\&.
.SS "#define __FLT64_DIG__   15"

.PP
Definition at line 222 of file moc_predefs\&.h\&.
.SS "#define __FLT64_EPSILON__   2\&.22044604925031308084726333618164062e\-16F64"

.PP
Definition at line 95 of file moc_predefs\&.h\&.
.SS "#define __FLT64_HAS_DENORM__   1"

.PP
Definition at line 310 of file moc_predefs\&.h\&.
.SS "#define __FLT64_HAS_INFINITY__   1"

.PP
Definition at line 261 of file moc_predefs\&.h\&.
.SS "#define __FLT64_HAS_QUIET_NAN__   1"

.PP
Definition at line 255 of file moc_predefs\&.h\&.
.SS "#define __FLT64_MANT_DIG__   53"

.PP
Definition at line 101 of file moc_predefs\&.h\&.
.SS "#define __FLT64_MAX_10_EXP__   308"

.PP
Definition at line 111 of file moc_predefs\&.h\&.
.SS "#define __FLT64_MAX__   1\&.79769313486231570814527423731704357e+308F64"

.PP
Definition at line 291 of file moc_predefs\&.h\&.
.SS "#define __FLT64_MAX_EXP__   1024"

.PP
Definition at line 302 of file moc_predefs\&.h\&.
.SS "#define __FLT64_MIN_10_EXP__   (\-307)"

.PP
Definition at line 168 of file moc_predefs\&.h\&.
.SS "#define __FLT64_MIN__   2\&.22507385850720138309023271733240406e\-308F64"

.PP
Definition at line 336 of file moc_predefs\&.h\&.
.SS "#define __FLT64_MIN_EXP__   (\-1021)"

.PP
Definition at line 97 of file moc_predefs\&.h\&.
.SS "#define __FLT64X_DECIMAL_DIG__   21"

.PP
Definition at line 169 of file moc_predefs\&.h\&.
.SS "#define __FLT64X_DENORM_MIN__   3\&.64519953188247460252840593361941982e\-4951F64x"

.PP
Definition at line 86 of file moc_predefs\&.h\&.
.SS "#define __FLT64X_DIG__   18"

.PP
Definition at line 206 of file moc_predefs\&.h\&.
.SS "#define __FLT64X_EPSILON__   1\&.08420217248550443400745280086994171e\-19F64x"

.PP
Definition at line 75 of file moc_predefs\&.h\&.
.SS "#define __FLT64X_HAS_DENORM__   1"

.PP
Definition at line 228 of file moc_predefs\&.h\&.
.SS "#define __FLT64X_HAS_INFINITY__   1"

.PP
Definition at line 200 of file moc_predefs\&.h\&.
.SS "#define __FLT64X_HAS_QUIET_NAN__   1"

.PP
Definition at line 161 of file moc_predefs\&.h\&.
.SS "#define __FLT64X_MANT_DIG__   64"

.PP
Definition at line 70 of file moc_predefs\&.h\&.
.SS "#define __FLT64X_MAX_10_EXP__   4932"

.PP
Definition at line 50 of file moc_predefs\&.h\&.
.SS "#define __FLT64X_MAX__   1\&.18973149535723176502126385303097021e+4932F64x"

.PP
Definition at line 262 of file moc_predefs\&.h\&.
.SS "#define __FLT64X_MAX_EXP__   16384"

.PP
Definition at line 276 of file moc_predefs\&.h\&.
.SS "#define __FLT64X_MIN_10_EXP__   (\-4931)"

.PP
Definition at line 99 of file moc_predefs\&.h\&.
.SS "#define __FLT64X_MIN__   3\&.36210314311209350626267781732175260e\-4932F64x"

.PP
Definition at line 308 of file moc_predefs\&.h\&.
.SS "#define __FLT64X_MIN_EXP__   (\-16381)"

.PP
Definition at line 149 of file moc_predefs\&.h\&.
.SS "#define __FLT_DECIMAL_DIG__   9"

.PP
Definition at line 369 of file moc_predefs\&.h\&.
.SS "#define __FLT_DENORM_MIN__   1\&.40129846432481707092372958328991613e\-45F"

.PP
Definition at line 325 of file moc_predefs\&.h\&.
.SS "#define __FLT_DIG__   6"

.PP
Definition at line 275 of file moc_predefs\&.h\&.
.SS "#define __FLT_EPSILON__   1\&.19209289550781250000000000000000000e\-7F"

.PP
Definition at line 80 of file moc_predefs\&.h\&.
.SS "#define __FLT_EVAL_METHOD__   2"

.PP
Definition at line 30 of file moc_predefs\&.h\&.
.SS "#define __FLT_EVAL_METHOD_TS_18661_3__   2"

.PP
Definition at line 56 of file moc_predefs\&.h\&.
.SS "#define __FLT_HAS_DENORM__   1"

.PP
Definition at line 107 of file moc_predefs\&.h\&.
.SS "#define __FLT_HAS_INFINITY__   1"

.PP
Definition at line 230 of file moc_predefs\&.h\&.
.SS "#define __FLT_HAS_QUIET_NAN__   1"

.PP
Definition at line 225 of file moc_predefs\&.h\&.
.SS "#define __FLT_MANT_DIG__   24"

.PP
Definition at line 179 of file moc_predefs\&.h\&.
.SS "#define __FLT_MAX_10_EXP__   38"

.PP
Definition at line 226 of file moc_predefs\&.h\&.
.SS "#define __FLT_MAX__   3\&.40282346638528859811704183484516925e+38F"

.PP
Definition at line 330 of file moc_predefs\&.h\&.
.SS "#define __FLT_MAX_EXP__   128"

.PP
Definition at line 281 of file moc_predefs\&.h\&.
.SS "#define __FLT_MIN_10_EXP__   (\-37)"

.PP
Definition at line 335 of file moc_predefs\&.h\&.
.SS "#define __FLT_MIN__   1\&.17549435082228750796873653722224568e\-38F"

.PP
Definition at line 8 of file moc_predefs\&.h\&.
.SS "#define __FLT_MIN_EXP__   (\-125)"

.PP
Definition at line 158 of file moc_predefs\&.h\&.
.SS "#define __FLT_RADIX__   2"

.PP
Definition at line 209 of file moc_predefs\&.h\&.
.SS "#define __GCC_ASM_FLAG_OUTPUTS__   1"

.PP
Definition at line 208 of file moc_predefs\&.h\&.
.SS "#define __GCC_ATOMIC_BOOL_LOCK_FREE   2"

.PP
Definition at line 52 of file moc_predefs\&.h\&.
.SS "#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE   2"

.PP
Definition at line 73 of file moc_predefs\&.h\&.
.SS "#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE   2"

.PP
Definition at line 33 of file moc_predefs\&.h\&.
.SS "#define __GCC_ATOMIC_CHAR_LOCK_FREE   2"

.PP
Definition at line 27 of file moc_predefs\&.h\&.
.SS "#define __GCC_ATOMIC_INT_LOCK_FREE   2"

.PP
Definition at line 184 of file moc_predefs\&.h\&.
.SS "#define __GCC_ATOMIC_LLONG_LOCK_FREE   2"

.PP
Definition at line 366 of file moc_predefs\&.h\&.
.SS "#define __GCC_ATOMIC_LONG_LOCK_FREE   2"

.PP
Definition at line 244 of file moc_predefs\&.h\&.
.SS "#define __GCC_ATOMIC_POINTER_LOCK_FREE   2"

.PP
Definition at line 69 of file moc_predefs\&.h\&.
.SS "#define __GCC_ATOMIC_SHORT_LOCK_FREE   2"

.PP
Definition at line 371 of file moc_predefs\&.h\&.
.SS "#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL   1"

.PP
Definition at line 274 of file moc_predefs\&.h\&.
.SS "#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE   2"

.PP
Definition at line 214 of file moc_predefs\&.h\&.
.SS "#define __GCC_HAVE_DWARF2_CFI_ASM   1"

.PP
Definition at line 155 of file moc_predefs\&.h\&.
.SS "#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1   1"

.PP
Definition at line 22 of file moc_predefs\&.h\&.
.SS "#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2   1"

.PP
Definition at line 23 of file moc_predefs\&.h\&.
.SS "#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4   1"

.PP
Definition at line 24 of file moc_predefs\&.h\&.
.SS "#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8   1"

.PP
Definition at line 26 of file moc_predefs\&.h\&.
.SS "#define __GCC_IEC_559   2"

.PP
Definition at line 28 of file moc_predefs\&.h\&.
.SS "#define __GCC_IEC_559_COMPLEX   2"

.PP
Definition at line 9 of file moc_predefs\&.h\&.
.SS "#define __GNUC__   7"

.PP
Definition at line 103 of file moc_predefs\&.h\&.
.SS "#define __GNUC_MINOR__   3"

.PP
Definition at line 344 of file moc_predefs\&.h\&.
.SS "#define __GNUC_PATCHLEVEL__   0"

.PP
Definition at line 39 of file moc_predefs\&.h\&.
.SS "#define __GNUC_STDC_INLINE__   1"

.PP
Definition at line 309 of file moc_predefs\&.h\&.
.SS "#define __GNUG__   7"

.PP
Definition at line 144 of file moc_predefs\&.h\&.
.SS "#define __GXX_ABI_VERSION   1011"

.PP
Definition at line 156 of file moc_predefs\&.h\&.
.SS "#define __GXX_EXPERIMENTAL_CXX0X__   1"

.PP
Definition at line 58 of file moc_predefs\&.h\&.
.SS "#define __GXX_MERGED_TYPEINFO_NAMES   0"

.PP
Definition at line 253 of file moc_predefs\&.h\&.
.SS "#define __GXX_RTTI   1"

.PP
Definition at line 105 of file moc_predefs\&.h\&.
.SS "#define __GXX_TYPEINFO_EQUALITY_INLINE   0"

.PP
Definition at line 167 of file moc_predefs\&.h\&.
.SS "#define __GXX_WEAK__   1"

.PP
Definition at line 81 of file moc_predefs\&.h\&.
.SS "#define __has_include(STR)   __has_include__(STR)"

.PP
Definition at line 42 of file moc_predefs\&.h\&.
.SS "#define __has_include_next(STR)   __has_include_next__(STR)"

.PP
Definition at line 98 of file moc_predefs\&.h\&.
.SS "#define __i386   1"

.PP
Definition at line 178 of file moc_predefs\&.h\&.
.SS "#define __i386__   1"

.PP
Definition at line 202 of file moc_predefs\&.h\&.
.SS "#define __i686   1"

.PP
Definition at line 112 of file moc_predefs\&.h\&.
.SS "#define __i686__   1"

.PP
Definition at line 159 of file moc_predefs\&.h\&.
.SS "#define __INT16_C(c)   c"

.PP
Definition at line 351 of file moc_predefs\&.h\&.
.SS "#define __INT16_MAX__   0x7fff"

.PP
Definition at line 201 of file moc_predefs\&.h\&.
.SS "#define __INT16_TYPE__   short int"

.PP
Definition at line 247 of file moc_predefs\&.h\&.
.SS "#define __INT32_C(c)   c"

.PP
Definition at line 192 of file moc_predefs\&.h\&.
.SS "#define __INT32_MAX__   0x7fffffff"

.PP
Definition at line 89 of file moc_predefs\&.h\&.
.SS "#define __INT32_TYPE__   int"

.PP
Definition at line 332 of file moc_predefs\&.h\&.
.SS "#define __INT64_C(c)   c ## LL"

.PP
Definition at line 67 of file moc_predefs\&.h\&.
.SS "#define __INT64_MAX__   0x7fffffffffffffffLL"

.PP
Definition at line 120 of file moc_predefs\&.h\&.
.SS "#define __INT64_TYPE__   long long int"

.PP
Definition at line 280 of file moc_predefs\&.h\&.
.SS "#define __INT8_C(c)   c"

.PP
Definition at line 45 of file moc_predefs\&.h\&.
.SS "#define __INT8_MAX__   0x7f"

.PP
Definition at line 326 of file moc_predefs\&.h\&.
.SS "#define __INT8_TYPE__   signed char"

.PP
Definition at line 207 of file moc_predefs\&.h\&.
.SS "#define __INT_FAST16_MAX__   0x7fff"

.PP
Definition at line 221 of file moc_predefs\&.h\&.
.SS "#define __INT_FAST16_TYPE__   short int"

.PP
Definition at line 125 of file moc_predefs\&.h\&.
.SS "#define __INT_FAST16_WIDTH__   16"

.PP
Definition at line 345 of file moc_predefs\&.h\&.
.SS "#define __INT_FAST32_MAX__   0x7fffffff"

.PP
Definition at line 117 of file moc_predefs\&.h\&.
.SS "#define __INT_FAST32_TYPE__   int"

.PP
Definition at line 198 of file moc_predefs\&.h\&.
.SS "#define __INT_FAST32_WIDTH__   32"

.PP
Definition at line 234 of file moc_predefs\&.h\&.
.SS "#define __INT_FAST64_MAX__   0x7fffffffffffffffLL"

.PP
Definition at line 273 of file moc_predefs\&.h\&.
.SS "#define __INT_FAST64_TYPE__   long long int"

.PP
Definition at line 162 of file moc_predefs\&.h\&.
.SS "#define __INT_FAST64_WIDTH__   64"

.PP
Definition at line 269 of file moc_predefs\&.h\&.
.SS "#define __INT_FAST8_MAX__   0x7f"

.PP
Definition at line 250 of file moc_predefs\&.h\&.
.SS "#define __INT_FAST8_TYPE__   signed char"

.PP
Definition at line 306 of file moc_predefs\&.h\&.
.SS "#define __INT_FAST8_WIDTH__   8"

.PP
Definition at line 314 of file moc_predefs\&.h\&.
.SS "#define __INT_LEAST16_MAX__   0x7fff"

.PP
Definition at line 239 of file moc_predefs\&.h\&.
.SS "#define __INT_LEAST16_TYPE__   short int"

.PP
Definition at line 210 of file moc_predefs\&.h\&.
.SS "#define __INT_LEAST16_WIDTH__   16"

.PP
Definition at line 63 of file moc_predefs\&.h\&.
.SS "#define __INT_LEAST32_MAX__   0x7fffffff"

.PP
Definition at line 131 of file moc_predefs\&.h\&.
.SS "#define __INT_LEAST32_TYPE__   int"

.PP
Definition at line 303 of file moc_predefs\&.h\&.
.SS "#define __INT_LEAST32_WIDTH__   32"

.PP
Definition at line 337 of file moc_predefs\&.h\&.
.SS "#define __INT_LEAST64_MAX__   0x7fffffffffffffffLL"

.PP
Definition at line 285 of file moc_predefs\&.h\&.
.SS "#define __INT_LEAST64_TYPE__   long long int"

.PP
Definition at line 246 of file moc_predefs\&.h\&.
.SS "#define __INT_LEAST64_WIDTH__   64"

.PP
Definition at line 372 of file moc_predefs\&.h\&.
.SS "#define __INT_LEAST8_MAX__   0x7f"

.PP
Definition at line 293 of file moc_predefs\&.h\&.
.SS "#define __INT_LEAST8_TYPE__   signed char"

.PP
Definition at line 248 of file moc_predefs\&.h\&.
.SS "#define __INT_LEAST8_WIDTH__   8"

.PP
Definition at line 46 of file moc_predefs\&.h\&.
.SS "#define __INT_MAX__   0x7fffffff"

.PP
Definition at line 278 of file moc_predefs\&.h\&.
.SS "#define __INT_WIDTH__   32"

.PP
Definition at line 90 of file moc_predefs\&.h\&.
.SS "#define __INTMAX_C(c)   c ## LL"

.PP
Definition at line 13 of file moc_predefs\&.h\&.
.SS "#define __INTMAX_MAX__   0x7fffffffffffffffLL"

.PP
Definition at line 321 of file moc_predefs\&.h\&.
.SS "#define __INTMAX_TYPE__   long long int"

.PP
Definition at line 338 of file moc_predefs\&.h\&.
.SS "#define __INTMAX_WIDTH__   64"

.PP
Definition at line 96 of file moc_predefs\&.h\&.
.SS "#define __INTPTR_MAX__   0x7fffffff"

.PP
Definition at line 252 of file moc_predefs\&.h\&.
.SS "#define __INTPTR_TYPE__   int"

.PP
Definition at line 264 of file moc_predefs\&.h\&.
.SS "#define __INTPTR_WIDTH__   32"

.PP
Definition at line 123 of file moc_predefs\&.h\&.
.SS "#define __LDBL_DECIMAL_DIG__   21"

.PP
Definition at line 180 of file moc_predefs\&.h\&.
.SS "#define __LDBL_DENORM_MIN__   3\&.64519953188247460252840593361941982e\-4951L"

.PP
Definition at line 350 of file moc_predefs\&.h\&.
.SS "#define __LDBL_DIG__   18"

.PP
Definition at line 368 of file moc_predefs\&.h\&.
.SS "#define __LDBL_EPSILON__   1\&.08420217248550443400745280086994171e\-19L"

.PP
Definition at line 211 of file moc_predefs\&.h\&.
.SS "#define __LDBL_HAS_DENORM__   1"

.PP
Definition at line 127 of file moc_predefs\&.h\&.
.SS "#define __LDBL_HAS_INFINITY__   1"

.PP
Definition at line 78 of file moc_predefs\&.h\&.
.SS "#define __LDBL_HAS_QUIET_NAN__   1"

.PP
Definition at line 100 of file moc_predefs\&.h\&.
.SS "#define __LDBL_MANT_DIG__   64"

.PP
Definition at line 259 of file moc_predefs\&.h\&.
.SS "#define __LDBL_MAX_10_EXP__   4932"

.PP
Definition at line 296 of file moc_predefs\&.h\&.
.SS "#define __LDBL_MAX__   1\&.18973149535723176502126385303097021e+4932L"

.PP
Definition at line 49 of file moc_predefs\&.h\&.
.SS "#define __LDBL_MAX_EXP__   16384"

.PP
Definition at line 59 of file moc_predefs\&.h\&.
.SS "#define __LDBL_MIN_10_EXP__   (\-4931)"

.PP
Definition at line 361 of file moc_predefs\&.h\&.
.SS "#define __LDBL_MIN__   3\&.36210314311209350626267781732175260e\-4932L"

.PP
Definition at line 83 of file moc_predefs\&.h\&.
.SS "#define __LDBL_MIN_EXP__   (\-16381)"

.PP
Definition at line 290 of file moc_predefs\&.h\&.
.SS "#define __LONG_LONG_MAX__   0x7fffffffffffffffLL"

.PP
Definition at line 145 of file moc_predefs\&.h\&.
.SS "#define __LONG_LONG_WIDTH__   64"

.PP
Definition at line 151 of file moc_predefs\&.h\&.
.SS "#define __LONG_MAX__   0x7fffffffL"

.PP
Definition at line 227 of file moc_predefs\&.h\&.
.SS "#define __LONG_WIDTH__   32"

.PP
Definition at line 327 of file moc_predefs\&.h\&.
.SS "#define __MINGW32__   1"

.PP
Definition at line 87 of file moc_predefs\&.h\&.
.SS "#define __MSVCRT__   1"

.PP
Definition at line 220 of file moc_predefs\&.h\&.
.SS "#define __NO_INLINE__   1"

.PP
Definition at line 177 of file moc_predefs\&.h\&.
.SS "#define __ORDER_BIG_ENDIAN__   4321"

.PP
Definition at line 317 of file moc_predefs\&.h\&.
.SS "#define __ORDER_LITTLE_ENDIAN__   1234"

.PP
Definition at line 19 of file moc_predefs\&.h\&.
.SS "#define __ORDER_PDP_ENDIAN__   3412"

.PP
Definition at line 194 of file moc_predefs\&.h\&.
.SS "#define __pentiumpro   1"

.PP
Definition at line 219 of file moc_predefs\&.h\&.
.SS "#define __pentiumpro__   1"

.PP
Definition at line 4 of file moc_predefs\&.h\&.
.SS "#define __PRAGMA_REDEFINE_EXTNAME   1"

.PP
Definition at line 236 of file moc_predefs\&.h\&.
.SS "#define __PTRDIFF_MAX__   0x7fffffff"

.PP
Definition at line 141 of file moc_predefs\&.h\&.
.SS "#define __PTRDIFF_TYPE__   int"

.PP
Definition at line 354 of file moc_predefs\&.h\&.
.SS "#define __PTRDIFF_WIDTH__   32"

.PP
Definition at line 93 of file moc_predefs\&.h\&.
.SS "#define __REGISTER_PREFIX__"

.PP
Definition at line 171 of file moc_predefs\&.h\&.
.SS "#define __SCHAR_MAX__   0x7f"

.PP
Definition at line 64 of file moc_predefs\&.h\&.
.SS "#define __SCHAR_WIDTH__   8"

.PP
Definition at line 191 of file moc_predefs\&.h\&.
.SS "#define __SEG_FS   1"

.PP
Definition at line 238 of file moc_predefs\&.h\&.
.SS "#define __SEG_GS   1"

.PP
Definition at line 242 of file moc_predefs\&.h\&.
.SS "#define __SHRT_MAX__   0x7fff"

.PP
Definition at line 48 of file moc_predefs\&.h\&.
.SS "#define __SHRT_WIDTH__   16"

.PP
Definition at line 82 of file moc_predefs\&.h\&.
.SS "#define __SIG_ATOMIC_MAX__   0x7fffffff"

.PP
Definition at line 213 of file moc_predefs\&.h\&.
.SS "#define __SIG_ATOMIC_MIN__   (\-\fB__SIG_ATOMIC_MAX__\fP \- 1)"

.PP
Definition at line 263 of file moc_predefs\&.h\&.
.SS "#define __SIG_ATOMIC_TYPE__   int"

.PP
Definition at line 36 of file moc_predefs\&.h\&.
.SS "#define __SIG_ATOMIC_WIDTH__   32"

.PP
Definition at line 245 of file moc_predefs\&.h\&.
.SS "#define __SIZE_MAX__   0xffffffffU"

.PP
Definition at line 20 of file moc_predefs\&.h\&.
.SS "#define __SIZE_TYPE__   unsigned int"

.PP
Definition at line 204 of file moc_predefs\&.h\&.
.SS "#define __SIZE_WIDTH__   32"

.PP
Definition at line 237 of file moc_predefs\&.h\&.
.SS "#define __SIZEOF_DOUBLE__   8"

.PP
Definition at line 333 of file moc_predefs\&.h\&.
.SS "#define __SIZEOF_FLOAT128__   16"

.PP
Definition at line 284 of file moc_predefs\&.h\&.
.SS "#define __SIZEOF_FLOAT80__   12"

.PP
Definition at line 11 of file moc_predefs\&.h\&.
.SS "#define __SIZEOF_FLOAT__   4"

.PP
Definition at line 267 of file moc_predefs\&.h\&.
.SS "#define __SIZEOF_INT__   4"

.PP
Definition at line 71 of file moc_predefs\&.h\&.
.SS "#define __SIZEOF_LONG__   4"

.PP
Definition at line 91 of file moc_predefs\&.h\&.
.SS "#define __SIZEOF_LONG_DOUBLE__   12"

.PP
Definition at line 108 of file moc_predefs\&.h\&.
.SS "#define __SIZEOF_LONG_LONG__   8"

.PP
Definition at line 363 of file moc_predefs\&.h\&.
.SS "#define __SIZEOF_POINTER__   4"

.PP
Definition at line 72 of file moc_predefs\&.h\&.
.SS "#define __SIZEOF_PTRDIFF_T__   4"

.PP
Definition at line 215 of file moc_predefs\&.h\&.
.SS "#define __SIZEOF_SHORT__   2"

.PP
Definition at line 289 of file moc_predefs\&.h\&.
.SS "#define __SIZEOF_SIZE_T__   4"

.PP
Definition at line 146 of file moc_predefs\&.h\&.
.SS "#define __SIZEOF_WCHAR_T__   2"

.PP
Definition at line 304 of file moc_predefs\&.h\&.
.SS "#define __SIZEOF_WINT_T__   2"

.PP
Definition at line 150 of file moc_predefs\&.h\&.
.SS "#define __STDC__   1"

.PP
Definition at line 352 of file moc_predefs\&.h\&.
.SS "#define __STDC_HOSTED__   1"

.PP
Definition at line 76 of file moc_predefs\&.h\&.
.SS "#define __STDC_UTF_16__   1"

.PP
Definition at line 110 of file moc_predefs\&.h\&.
.SS "#define __STDC_UTF_32__   1"

.PP
Definition at line 313 of file moc_predefs\&.h\&.
.SS "#define __stdcall   __attribute__((__stdcall__))"

.PP
Definition at line 256 of file moc_predefs\&.h\&.
.SS "#define __thiscall   __attribute__((__thiscall__))"

.PP
Definition at line 299 of file moc_predefs\&.h\&.
.SS "#define __UINT16_C(c)   c"

.PP
Definition at line 92 of file moc_predefs\&.h\&.
.SS "#define __UINT16_MAX__   0xffff"

.PP
Definition at line 172 of file moc_predefs\&.h\&.
.SS "#define __UINT16_TYPE__   short unsigned int"

.PP
Definition at line 265 of file moc_predefs\&.h\&.
.SS "#define __UINT32_C(c)   c ## U"

.PP
Definition at line 320 of file moc_predefs\&.h\&.
.SS "#define __UINT32_MAX__   0xffffffffU"

.PP
Definition at line 57 of file moc_predefs\&.h\&.
.SS "#define __UINT32_TYPE__   unsigned int"

.PP
Definition at line 356 of file moc_predefs\&.h\&.
.SS "#define __UINT64_C(c)   c ## ULL"

.PP
Definition at line 182 of file moc_predefs\&.h\&.
.SS "#define __UINT64_MAX__   0xffffffffffffffffULL"

.PP
Definition at line 205 of file moc_predefs\&.h\&.
.SS "#define __UINT64_TYPE__   long long unsigned int"

.PP
Definition at line 319 of file moc_predefs\&.h\&.
.SS "#define __UINT8_C(c)   c"

.PP
Definition at line 301 of file moc_predefs\&.h\&.
.SS "#define __UINT8_MAX__   0xff"

.PP
Definition at line 15 of file moc_predefs\&.h\&.
.SS "#define __UINT8_TYPE__   unsigned char"

.PP
Definition at line 176 of file moc_predefs\&.h\&.
.SS "#define __UINT_FAST16_MAX__   0xffff"

.PP
Definition at line 370 of file moc_predefs\&.h\&.
.SS "#define __UINT_FAST16_TYPE__   short unsigned int"

.PP
Definition at line 232 of file moc_predefs\&.h\&.
.SS "#define __UINT_FAST32_MAX__   0xffffffffU"

.PP
Definition at line 223 of file moc_predefs\&.h\&.
.SS "#define __UINT_FAST32_TYPE__   unsigned int"

.PP
Definition at line 328 of file moc_predefs\&.h\&.
.SS "#define __UINT_FAST64_MAX__   0xffffffffffffffffULL"

.PP
Definition at line 35 of file moc_predefs\&.h\&.
.SS "#define __UINT_FAST64_TYPE__   long long unsigned int"

.PP
Definition at line 277 of file moc_predefs\&.h\&.
.SS "#define __UINT_FAST8_MAX__   0xff"

.PP
Definition at line 41 of file moc_predefs\&.h\&.
.SS "#define __UINT_FAST8_TYPE__   unsigned char"

.PP
Definition at line 373 of file moc_predefs\&.h\&.
.SS "#define __UINT_LEAST16_MAX__   0xffff"

.PP
Definition at line 5 of file moc_predefs\&.h\&.
.SS "#define __UINT_LEAST16_TYPE__   short unsigned int"

.PP
Definition at line 199 of file moc_predefs\&.h\&.
.SS "#define __UINT_LEAST32_MAX__   0xffffffffU"

.PP
Definition at line 241 of file moc_predefs\&.h\&.
.SS "#define __UINT_LEAST32_TYPE__   unsigned int"

.PP
Definition at line 288 of file moc_predefs\&.h\&.
.SS "#define __UINT_LEAST64_MAX__   0xffffffffffffffffULL"

.PP
Definition at line 47 of file moc_predefs\&.h\&.
.SS "#define __UINT_LEAST64_TYPE__   long long unsigned int"

.PP
Definition at line 224 of file moc_predefs\&.h\&.
.SS "#define __UINT_LEAST8_MAX__   0xff"

.PP
Definition at line 51 of file moc_predefs\&.h\&.
.SS "#define __UINT_LEAST8_TYPE__   unsigned char"

.PP
Definition at line 10 of file moc_predefs\&.h\&.
.SS "#define __UINTMAX_C(c)   c ## ULL"

.PP
Definition at line 212 of file moc_predefs\&.h\&.
.SS "#define __UINTMAX_MAX__   0xffffffffffffffffULL"

.PP
Definition at line 346 of file moc_predefs\&.h\&.
.SS "#define __UINTMAX_TYPE__   long long unsigned int"

.PP
Definition at line 54 of file moc_predefs\&.h\&.
.SS "#define __UINTPTR_MAX__   0xffffffffU"

.PP
Definition at line 268 of file moc_predefs\&.h\&.
.SS "#define __UINTPTR_TYPE__   unsigned int"

.PP
Definition at line 358 of file moc_predefs\&.h\&.
.SS "#define __USER_LABEL_PREFIX__   _"

.PP
Definition at line 74 of file moc_predefs\&.h\&.
.SS "#define __VERSION__   '7\&.3\&.0'"

.PP
Definition at line 181 of file moc_predefs\&.h\&.
.SS "#define __WCHAR_MAX__   0xffff"

.PP
Definition at line 21 of file moc_predefs\&.h\&.
.SS "#define __WCHAR_MIN__   0"

.PP
Definition at line 66 of file moc_predefs\&.h\&.
.SS "#define __WCHAR_TYPE__   short unsigned int"

.PP
Definition at line 266 of file moc_predefs\&.h\&.
.SS "#define __WCHAR_UNSIGNED__   1"

.PP
Definition at line 295 of file moc_predefs\&.h\&.
.SS "#define __WCHAR_WIDTH__   16"

.PP
Definition at line 136 of file moc_predefs\&.h\&.
.SS "#define __WIN32   1"

.PP
Definition at line 77 of file moc_predefs\&.h\&.
.SS "#define __WIN32__   1"

.PP
Definition at line 140 of file moc_predefs\&.h\&.
.SS "#define __WINNT   1"

.PP
Definition at line 118 of file moc_predefs\&.h\&.
.SS "#define __WINNT__   1"

.PP
Definition at line 121 of file moc_predefs\&.h\&.
.SS "#define __WINT_MAX__   0xffff"

.PP
Definition at line 16 of file moc_predefs\&.h\&.
.SS "#define __WINT_MIN__   0"

.PP
Definition at line 61 of file moc_predefs\&.h\&.
.SS "#define __WINT_TYPE__   short unsigned int"

.PP
Definition at line 287 of file moc_predefs\&.h\&.
.SS "#define __WINT_WIDTH__   16"

.PP
Definition at line 292 of file moc_predefs\&.h\&.
.SS "#define _cdecl   __attribute__((__cdecl__))"

.PP
Definition at line 104 of file moc_predefs\&.h\&.
.SS "#define _fastcall   __attribute__((__fastcall__))"

.PP
Definition at line 126 of file moc_predefs\&.h\&.
.SS "#define _INTEGRAL_MAX_BITS   64"

.PP
Definition at line 340 of file moc_predefs\&.h\&.
.SS "#define _REENTRANT   1"

.PP
Definition at line 102 of file moc_predefs\&.h\&.
.SS "#define _stdcall   __attribute__((__stdcall__))"

.PP
Definition at line 43 of file moc_predefs\&.h\&.
.SS "#define _thiscall   __attribute__((__thiscall__))"

.PP
Definition at line 115 of file moc_predefs\&.h\&.
.SS "#define _WIN32   1"

.PP
Definition at line 12 of file moc_predefs\&.h\&.
.SS "#define _X86_   1"

.PP
Definition at line 187 of file moc_predefs\&.h\&.
.SS "#define i386   1"

.PP
Definition at line 339 of file moc_predefs\&.h\&.
.SS "#define WIN32   1"

.PP
Definition at line 279 of file moc_predefs\&.h\&.
.SS "#define WINNT   1"

.PP
Definition at line 324 of file moc_predefs\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for European Vacation Planner from the source code\&.
