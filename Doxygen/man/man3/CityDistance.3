.TH "CityDistance" 3 "Sun Oct 20 2019" "Version 1.0" "European Vacation Planner" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CityDistance \- \fBCityDistance\fP struct A struct which contains the distance from a given city to another city\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <city\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCityDistance\fP ()"
.br
.RI "Name of the other city from the current one\&. "
.ti -1c
.RI "\fBCityDistance\fP (int \fBdistance\fP, QString \fBendCity\fP)"
.br
.RI "\fBCityDistance(int distance, QString endCity)\fP Overloaded Constructor\&. "
.ti -1c
.RI "bool \fBoperator<\fP (const \fBCityDistance\fP &other) const"
.br
.RI "\fBCityDistance::operator<()\fP Overloaded less than comparison operator Compares the distances between two pairs of cities to determine which is shorter\&. "
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBCityDistance\fP &other) const"
.br
.RI "\fBCityDistance::operator!=()\fP Overloaded inequality operator Returns true if both city distances are not equal\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "int \fBdistance\fP"
.br
.ti -1c
.RI "QString \fBendCity\fP"
.br
.RI "Distance from one city to another\&. "
.in -1c
.SH "Detailed Description"
.PP 
\fBCityDistance\fP struct A struct which contains the distance from a given city to another city\&. 


.PP
\fBAuthor:\fP
.RS 4
Aaron Geesink 
.RE
.PP
\fBDate:\fP
.RS 4
October 2019 
.RE
.PP

.PP
Definition at line 15 of file city\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "CityDistance::CityDistance ()\fC [inline]\fP"

.PP
Name of the other city from the current one\&. \fBCityDistance()\fP Default Constructor 
.PP
Definition at line 24 of file city\&.h\&.
.SS "CityDistance::CityDistance (int distance, QString endCity)\fC [inline]\fP"

.PP
\fBCityDistance(int distance, QString endCity)\fP Overloaded Constructor\&. 
.PP
Definition at line 30 of file city\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "bool CityDistance::operator!= (const \fBCityDistance\fP & other) const\fC [inline]\fP"

.PP
\fBCityDistance::operator!=()\fP Overloaded inequality operator Returns true if both city distances are not equal\&. 
.PP
Definition at line 47 of file city\&.h\&.
.SS "bool CityDistance::operator< (const \fBCityDistance\fP & other) const\fC [inline]\fP"

.PP
\fBCityDistance::operator<()\fP Overloaded less than comparison operator Compares the distances between two pairs of cities to determine which is shorter\&. 
.PP
Definition at line 37 of file city\&.h\&.
.SH "Member Data Documentation"
.PP 
.SS "int CityDistance::distance"

.PP
Definition at line 17 of file city\&.h\&.
.SS "QString CityDistance::endCity"

.PP
Distance from one city to another\&. 
.PP
Definition at line 18 of file city\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for European Vacation Planner from the source code\&.
