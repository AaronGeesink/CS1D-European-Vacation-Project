<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_food" kind="class" language="C++" prot="public">
    <compoundname>Food</compoundname>
    <includes refid="food_8h" local="no">food.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_food_1a164de33afa4c7d4f1aa23a98eaf76f52" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Food::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" line="100" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_food_1a3dfa4734d69744bfed02cce817756612" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Food::price</definition>
        <argsstring></argsstring>
        <name>price</name>
        <briefdescription>
<para>The name of the food item. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" line="101" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_food_1acec98150eae20ab59b8cb0f032ce1620" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Food::quantity</definition>
        <argsstring></argsstring>
        <name>quantity</name>
        <briefdescription>
<para>The price of a food item. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" line="102" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_food_1a75d4d7f76fd495cc8133302ca9fdc485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Food::Food</definition>
        <argsstring>()</argsstring>
        <name>Food</name>
        <briefdescription>
<para><ref refid="class_food_1a75d4d7f76fd495cc8133302ca9fdc485" kindref="member">Food()</ref> Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Aaron Geesink </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" line="21" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.cpp" bodystart="3" bodyend="4"/>
      </memberdef>
      <memberdef kind="function" id="class_food_1aa479389d71859831d48d21bae7fa5217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Food::Food</definition>
        <argsstring>(QString name, double price, int quantity=0)</argsstring>
        <name>Food</name>
        <param>
          <type>QString</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>price</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quantity</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para><ref refid="class_food" kindref="compound">Food</ref>(QString name, double price, int quantity = 0) Overloaded constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Aaron Geesink </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" line="28" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.cpp" bodystart="6" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="class_food_1a6f25dffd1fb347c982a53b9a384c611a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Food::~Food</definition>
        <argsstring>()</argsstring>
        <name>~Food</name>
        <briefdescription>
<para><ref refid="class_food_1a6f25dffd1fb347c982a53b9a384c611a" kindref="member">~Food()</ref> Destructor </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Aaron Geesink </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" line="35" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.cpp" bodystart="10" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="class_food_1aa29cc2869e2607983876962343c12809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Food::setQuantity</definition>
        <argsstring>(int quantity)</argsstring>
        <name>setQuantity</name>
        <param>
          <type>int</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
<para><ref refid="class_food_1aa29cc2869e2607983876962343c12809" kindref="member">setQuantity(int quantity)</ref> Sets the quantity of food the user purchases </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Aaron Geesink </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>quantity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" line="43" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_food_1a16683d009125620dd07432fbe7711597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Food::getPrice</definition>
        <argsstring>()</argsstring>
        <name>getPrice</name>
        <briefdescription>
<para><ref refid="class_food_1a16683d009125620dd07432fbe7711597" kindref="member">getPrice()</ref> Returns the price of a food item </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Aaron Geesink </para>
</simplesect>
<simplesect kind="return"><para>double </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" line="51" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.cpp" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_food_1a5652293c23e8b797d363c08efc585601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Food::getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <briefdescription>
<para><ref refid="class_food_1a5652293c23e8b797d363c08efc585601" kindref="member">getName()</ref> Returns the name of a food item </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Aaron Geesink </para>
</simplesect>
<simplesect kind="return"><para>Qstring </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" line="59" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.cpp" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_food_1ac50c1e254e20ffeda0d28f84e1cc2160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Food::calculateTotal</definition>
        <argsstring>()</argsstring>
        <name>calculateTotal</name>
        <briefdescription>
<para><ref refid="class_food_1ac50c1e254e20ffeda0d28f84e1cc2160" kindref="member">calculateTotal()</ref> Returns the total price of all purchased food items </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Aaron Geesink </para>
</simplesect>
<simplesect kind="return"><para>double </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" line="67" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_food_1abe2267ba02f1b812c71028f427d92d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_food" kindref="compound">Food</ref> &amp;</type>
        <definition>Food &amp; Food::operator=</definition>
        <argsstring>(Food other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_food" kindref="compound">Food</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para><ref refid="class_food_1abe2267ba02f1b812c71028f427d92d81" kindref="member">operator=(Food other)</ref> An copy assignment for food items </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Aaron Geesink </para>
</simplesect>
<simplesect kind="return"><para><ref refid="class_food" kindref="compound">Food</ref> &amp; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" line="75" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.cpp" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_food_1a0ba9d6f416f396bc8e4a1c2ad519d3eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_food" kindref="compound">Food</ref> &amp;</type>
        <definition>Food &amp; Food::operator=</definition>
        <argsstring>(Food &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_food" kindref="compound">Food</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para><ref refid="class_food_1a0ba9d6f416f396bc8e4a1c2ad519d3eb" kindref="member">operator=(Food&amp;&amp; other)</ref> A move assignment for food items </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Aaron Geesink </para>
</simplesect>
<simplesect kind="return"><para><ref refid="class_food" kindref="compound">Food</ref>&amp; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" line="83" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.cpp" bodystart="41" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_food_1a365c2d6175447d0fe29e57facc277570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Food::Food</definition>
        <argsstring>(const Food &amp;other)</argsstring>
        <name>Food</name>
        <param>
          <type>const <ref refid="class_food" kindref="compound">Food</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para><ref refid="class_food_1a365c2d6175447d0fe29e57facc277570" kindref="member">Food(const Food&amp; other)</ref>; A copy constructor for food items. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Aaron Geesink </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" line="90" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.cpp" bodystart="49" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_food_1a82c4dcbac6b4bb4ce921bc3aea627387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Food::Food</definition>
        <argsstring>(Food &amp;&amp;other)</argsstring>
        <name>Food</name>
        <param>
          <type><ref refid="class_food" kindref="compound">Food</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para><ref refid="class_food_1a365c2d6175447d0fe29e57facc277570" kindref="member">Food(const Food&amp; other)</ref>; A copy assignment for food items. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Aaron Geesink </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" line="97" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.cpp" bodystart="56" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_food" kindref="compound">Food</ref> class A food class for instantiating food. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Aaron Geesink </para>
</simplesect>
<simplesect kind="date"><para>October 2019 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" line="14" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/food.h" bodystart="13" bodyend="103"/>
    <listofallmembers>
      <member refid="class_food_1ac50c1e254e20ffeda0d28f84e1cc2160" prot="public" virt="non-virtual"><scope>Food</scope><name>calculateTotal</name></member>
      <member refid="class_food_1a75d4d7f76fd495cc8133302ca9fdc485" prot="public" virt="non-virtual"><scope>Food</scope><name>Food</name></member>
      <member refid="class_food_1aa479389d71859831d48d21bae7fa5217" prot="public" virt="non-virtual"><scope>Food</scope><name>Food</name></member>
      <member refid="class_food_1a365c2d6175447d0fe29e57facc277570" prot="public" virt="non-virtual"><scope>Food</scope><name>Food</name></member>
      <member refid="class_food_1a82c4dcbac6b4bb4ce921bc3aea627387" prot="public" virt="non-virtual"><scope>Food</scope><name>Food</name></member>
      <member refid="class_food_1a5652293c23e8b797d363c08efc585601" prot="public" virt="non-virtual"><scope>Food</scope><name>getName</name></member>
      <member refid="class_food_1a16683d009125620dd07432fbe7711597" prot="public" virt="non-virtual"><scope>Food</scope><name>getPrice</name></member>
      <member refid="class_food_1a164de33afa4c7d4f1aa23a98eaf76f52" prot="private" virt="non-virtual"><scope>Food</scope><name>name</name></member>
      <member refid="class_food_1abe2267ba02f1b812c71028f427d92d81" prot="public" virt="non-virtual"><scope>Food</scope><name>operator=</name></member>
      <member refid="class_food_1a0ba9d6f416f396bc8e4a1c2ad519d3eb" prot="public" virt="non-virtual"><scope>Food</scope><name>operator=</name></member>
      <member refid="class_food_1a3dfa4734d69744bfed02cce817756612" prot="private" virt="non-virtual"><scope>Food</scope><name>price</name></member>
      <member refid="class_food_1acec98150eae20ab59b8cb0f032ce1620" prot="private" virt="non-virtual"><scope>Food</scope><name>quantity</name></member>
      <member refid="class_food_1aa29cc2869e2607983876962343c12809" prot="public" virt="non-virtual"><scope>Food</scope><name>setQuantity</name></member>
      <member refid="class_food_1a6f25dffd1fb347c982a53b9a384c611a" prot="public" virt="non-virtual"><scope>Food</scope><name>~Food</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
