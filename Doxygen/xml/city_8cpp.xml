<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="city_8cpp" kind="file" language="C++">
    <compoundname>city.cpp</compoundname>
    <includes refid="city_8h" local="yes">city.h</includes>
    <incdepgraph>
      <node id="0">
        <label>C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/city.cpp</label>
        <link refid="city_8cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>QDebug</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="6">
        <label>utility</label>
      </node>
      <node id="2">
        <label>QString</label>
      </node>
      <node id="5">
        <label>food.h</label>
        <link refid="food_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>city.h</label>
        <link refid="city_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="city_8h" kindref="compound">city.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="class_city_1a1b1f549430f0a7ecd0ec7b1605415193" refkind="member"><highlight class="normal"><ref refid="class_city_1a1b1f549430f0a7ecd0ec7b1605415193" kindref="member">City::City</ref>()<sp/>:<sp/>name{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">},<sp/>isStart{</highlight><highlight class="keyword">false</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="class_city_1a45f0a3c80b0e4ff9dc33256d2ff5eb0d" refkind="member"><highlight class="normal"><ref refid="class_city_1a1b1f549430f0a7ecd0ec7b1605415193" kindref="member">City::City</ref>(QString<sp/>name,<sp/>std::vector&lt;CityDistance&gt;<sp/>otherCities,<sp/>std::vector&lt;Food&gt;<sp/>foods,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isStart)</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>name{name},<sp/>otherCities{otherCities},<sp/>foods{foods},<sp/>isStart{isStart}</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_city_1afe733410d61155d8a4013293b0b72408" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_city_1afe733410d61155d8a4013293b0b72408" kindref="member">City::getName</ref>()</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_city_1ad73598d937870a165cb530958106ff07" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_city_1afe733410d61155d8a4013293b0b72408" kindref="member">City::getName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_city_1ac4829f9fc09b4c0f4cf2f7453c974264" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_city_1ac4829f9fc09b4c0f4cf2f7453c974264" kindref="member">City::removeCityDistance</ref>(QString<sp/>name)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>otherCities.size();<sp/>i++)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(otherCities[i].endCity<sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherCities.erase(otherCities.begin()<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Deleted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_city_1a9e3da459f9dcf61ae1a4551d79abafb8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_city_1a9e3da459f9dcf61ae1a4551d79abafb8" kindref="member">City::sortDistances</ref>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(otherCities.begin(),<sp/>otherCities.end(),<sp/>std::less&lt;CityDistance&gt;());</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//qDebug()<sp/>&lt;&lt;<sp/>otherCities[0].endCity;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_city_1ad577ecd4be83b37ef2f9c5ff547f5259" refkind="member"><highlight class="normal"><ref refid="struct_city_distance" kindref="compound">CityDistance</ref><sp/><ref refid="class_city_1ad577ecd4be83b37ef2f9c5ff547f5259" kindref="member">City::getShortestDistance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="39"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_city_distance" kindref="compound">CityDistance</ref><sp/>shortest<sp/>=<sp/>otherCities[0];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>otherCities.size();<sp/>i++)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(otherCities[i].distance<sp/>&lt;<sp/>shortest.<ref refid="struct_city_distance_1aabe1e1bba711dab73cd70f1105c35c9e" kindref="member">distance</ref>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shortest<sp/>=<sp/>otherCities[i];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shortest;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_city_1a1462a90a0d40e0d946903b1db214da0e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_city_1a1462a90a0d40e0d946903b1db214da0e" kindref="member">City::getNumFoods</ref>()</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>foods.size();</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_city_1ae817fa08cc2191da09c91c3d6b4069d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_city_1ae817fa08cc2191da09c91c3d6b4069d5" kindref="member">City::getIsStart</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="57"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isStart;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_city_1a9fcdb0c59ac7760dd3996803ddb6bf86" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_city_1a9fcdb0c59ac7760dd3996803ddb6bf86" kindref="member">City::setIsStart</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>isStart<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_city_1abbfdb9d3dba484ee8f9daee6ef03cd97" refkind="member"><highlight class="normal">std::vector&lt;Food&gt;<sp/><ref refid="class_city_1abbfdb9d3dba484ee8f9daee6ef03cd97" kindref="member">City::getFoods</ref>()</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>foods;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/city.cpp"/>
  </compounddef>
</doxygen>
