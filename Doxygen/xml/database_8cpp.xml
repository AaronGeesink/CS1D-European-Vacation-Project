<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="database_8cpp" kind="file" language="C++">
    <compoundname>database.cpp</compoundname>
    <includes refid="database_8h" local="yes">database.h</includes>
    <incdepgraph>
      <node id="89">
        <label>C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/database.cpp</label>
        <link refid="database_8cpp"/>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>QDebug</label>
      </node>
      <node id="94">
        <label>vector</label>
      </node>
      <node id="97">
        <label>utility</label>
      </node>
      <node id="93">
        <label>QString</label>
      </node>
      <node id="96">
        <label>food.h</label>
        <link refid="food_8h"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>QFile</label>
      </node>
      <node id="90">
        <label>database.h</label>
        <link refid="database_8h"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>QDir</label>
      </node>
      <node id="92">
        <label>city.h</label>
        <link refid="city_8h"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>QtSql</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="database_8cpp_1ab4aabfdcc9a54dc707a10e2ecbe19e54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void createDatabase</definition>
        <argsstring>()</argsstring>
        <name>createDatabase</name>
        <briefdescription>
<para><ref refid="database_8h_1ab4aabfdcc9a54dc707a10e2ecbe19e54" kindref="member">createDatabase()</ref> Finds the SQL database file and loads it </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Garrett Geesink </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/database.cpp" line="3" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/database.cpp" bodystart="3" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="database_8cpp_1a11b5fb51260d48275dfc1583f8c1a724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool checkConnection</definition>
        <argsstring>()</argsstring>
        <name>checkConnection</name>
        <briefdescription>
<para><ref refid="database_8h_1a11b5fb51260d48275dfc1583f8c1a724" kindref="member">checkConnection()</ref> Checks the connection to the SQL database </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Garrett Geesink </para>
</simplesect>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/database.cpp" line="12" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/database.cpp" bodystart="12" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="database_8cpp_1a5ac7d7439066c8ed56e8f5e19c45b798" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; QString &gt;</type>
        <definition>std::vector&lt;QString&gt; queryCityNames</definition>
        <argsstring>()</argsstring>
        <name>queryCityNames</name>
        <briefdescription>
<para>Finds the SQL database file and loads it. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Garrett Geesink </para>
</simplesect>
<simplesect kind="return"><para>vector&lt;QString&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/database.cpp" line="31" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/database.cpp" bodystart="31" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="database_8cpp_1a7b661e63aa7fb4a9df128b9b7ca3c002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_city_distance" kindref="compound">CityDistance</ref></type>
        <definition>CityDistance queryDistance</definition>
        <argsstring>(QString start, QString end)</argsstring>
        <name>queryDistance</name>
        <param>
          <type>QString</type>
          <declname>start</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para><ref refid="database_8h_1a5ac7d7439066c8ed56e8f5e19c45b798" kindref="member">queryCityNames()</ref> Queries the SQL database for the distance between a start and end city </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Aaron Geesink </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>QString</parametername>
</parameternamelist>
<parameterdescription>
<para>start, QString end </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_city_distance" kindref="compound">CityDistance</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/database.cpp" line="52" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/database.cpp" bodystart="52" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="database_8cpp_1ac2a5025e47a56e7d7babdf6d91176476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_food" kindref="compound">Food</ref> &gt;</type>
        <definition>std::vector&lt;Food&gt; queryFoods</definition>
        <argsstring>(QString cityName)</argsstring>
        <name>queryFoods</name>
        <param>
          <type>QString</type>
          <declname>cityName</declname>
        </param>
        <briefdescription>
<para><ref refid="database_8h_1ac2a5025e47a56e7d7babdf6d91176476" kindref="member">queryFoods(QString cityName)</ref> Queries the SQL database for a city&apos;s food. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Aaron Geesink </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>QString</parametername>
</parameternamelist>
<parameterdescription>
<para>cityName </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vector&lt;Food&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/database.cpp" line="74" column="1" bodyfile="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/database.cpp" bodystart="74" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="database_8h" kindref="compound">database.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="database_8h_1ab4aabfdcc9a54dc707a10e2ecbe19e54" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="database_8cpp_1ab4aabfdcc9a54dc707a10e2ecbe19e54" kindref="member">createDatabase</ref>()</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>QSqlDatabase::addDatabase(</highlight><highlight class="stringliteral">&quot;QSQLITE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>QSqlDatabase<sp/>db;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>db<sp/>=<sp/>QSqlDatabase::database();</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>database<sp/>from<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>DB_PATH<sp/>=<sp/>QDir::currentPath()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/resources/database.db&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>db.setDatabaseName(DB_PATH);}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="database_8h_1a11b5fb51260d48275dfc1583f8c1a724" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="database_8cpp_1a11b5fb51260d48275dfc1583f8c1a724" kindref="member">checkConnection</ref>()</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>a<sp/>new<sp/>QSQLite<sp/>database</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>QSqlDatabase<sp/>db;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>db<sp/>=<sp/>QSqlDatabase::database();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>database<sp/>loaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!db.open())</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>SQL<sp/>Database&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;Connected<sp/>to<sp/>SQL<sp/>database&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="database_8h_1a5ac7d7439066c8ed56e8f5e19c45b798" refkind="member"><highlight class="normal">std::vector&lt;QString&gt;<sp/><ref refid="database_8cpp_1a5ac7d7439066c8ed56e8f5e19c45b798" kindref="member">queryCityNames</ref>()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;QString&gt;<sp/>cityNames;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="database_8cpp_1a11b5fb51260d48275dfc1583f8c1a724" kindref="member">checkConnection</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>QSqlQuery<sp/>query(QSqlDatabase::database());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>query.prepare(</highlight><highlight class="stringliteral">&quot;SELECT<sp/>*<sp/>FROM<sp/>city&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!query.exec())</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>query<sp/>from<sp/>SQL<sp/>Database&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(query.next())</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cityNames.push_back(query.value(0).toString());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cityNames;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="database_8h_1a7b661e63aa7fb4a9df128b9b7ca3c002" refkind="member"><highlight class="normal"><ref refid="struct_city_distance" kindref="compound">CityDistance</ref><sp/><ref refid="database_8cpp_1a7b661e63aa7fb4a9df128b9b7ca3c002" kindref="member">queryDistance</ref>(QString<sp/>start,<sp/>QString<sp/>end)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>QSqlQuery<sp/>query;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_city_distance" kindref="compound">CityDistance</ref><sp/>cityDistance;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>query.prepare(</highlight><highlight class="stringliteral">&quot;SELECT<sp/>distance<sp/>FROM<sp/>distance<sp/>WHERE<sp/>start<sp/>=<sp/>:start<sp/>and<sp/>end<sp/>=<sp/>:end&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>query.bindValue(</highlight><highlight class="stringliteral">&quot;:start&quot;</highlight><highlight class="normal">,<sp/>start);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>query.bindValue(</highlight><highlight class="stringliteral">&quot;:end&quot;</highlight><highlight class="normal">,<sp/>end);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!query.exec())</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>query<sp/>from<sp/>SQL<sp/>Database&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(query.next())</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance<sp/>=<sp/>query.value(0).toInt();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cityDistance.<ref refid="struct_city_distance_1aabe1e1bba711dab73cd70f1105c35c9e" kindref="member">distance</ref><sp/>=<sp/>distance;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cityDistance.<ref refid="struct_city_distance_1a7f1fe8d0c76af2abf5bc5c6bd1800e7f" kindref="member">endCity</ref><sp/>=<sp/>end;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cityDistance;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="database_8h_1ac2a5025e47a56e7d7babdf6d91176476" refkind="member"><highlight class="normal">std::vector&lt;Food&gt;<sp/><ref refid="database_8cpp_1ac2a5025e47a56e7d7babdf6d91176476" kindref="member">queryFoods</ref>(QString<sp/>cityName)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Food&gt;<sp/>foods;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;QString&gt;<sp/>foodNames;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>foodPrices;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>QSqlQuery<sp/>query;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Query<sp/>the<sp/>food<sp/>names<sp/>for<sp/>the<sp/>city</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>query.prepare(</highlight><highlight class="stringliteral">&quot;SELECT<sp/>foodName<sp/>FROM<sp/>food<sp/>WHERE<sp/>cityName<sp/>=<sp/>:cityName&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>query.bindValue(</highlight><highlight class="stringliteral">&quot;:cityName&quot;</highlight><highlight class="normal">,<sp/>cityName);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!query.exec())</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>query<sp/>from<sp/>SQL<sp/>Database&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(query.next())</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foodNames.push_back(query.value(0).toString());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Query<sp/>the<sp/>food<sp/>prices<sp/>for<sp/>the<sp/>city</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>query.prepare(</highlight><highlight class="stringliteral">&quot;SELECT<sp/>price<sp/>FROM<sp/>food<sp/>WHERE<sp/>cityName<sp/>=<sp/>:cityName&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>query.bindValue(</highlight><highlight class="stringliteral">&quot;:cityName&quot;</highlight><highlight class="normal">,<sp/>cityName);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!query.exec())</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>query<sp/>from<sp/>SQL<sp/>Database&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(query.next())</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foodPrices.push_back(query.value(0).toDouble());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>foodNames.size();<sp/>i++)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_food" kindref="compound">Food</ref><sp/>food(foodNames[i],<sp/>foodPrices[i]);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foods.push_back(food);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>foods;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/chatm/Desktop/CS1D-European-Vacation-Project/European-Vacation-Program/database.cpp"/>
  </compounddef>
</doxygen>
